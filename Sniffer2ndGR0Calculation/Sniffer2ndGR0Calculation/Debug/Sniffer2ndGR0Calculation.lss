
Sniffer2ndGR0Calculation.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c40  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  00000c40  00000cd4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000009  0080006c  0080006c  00000ce0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ce0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d3c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000d78  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000834  00000000  00000000  00000dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005ee  00000000  00000000  0000160c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a2  00000000  00000000  00001bfa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000134  00000000  00000000  00001f9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000409  00000000  00000000  000020d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002b2  00000000  00000000  000024d9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000278b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	78 c0       	rjmp	.+240    	; 0xfe <__vector_6>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	e9 c0       	rjmp	.+466    	; 0x1f0 <__vector_14>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e0 e4       	ldi	r30, 0x40	; 64
  3a:	fc e0       	ldi	r31, 0x0C	; 12
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	ac 36       	cpi	r26, 0x6C	; 108
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	ac e6       	ldi	r26, 0x6C	; 108
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a5 37       	cpi	r26, 0x75	; 117
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	61 d0       	rcall	.+194    	; 0x11c <main>
  5a:	f0 c5       	rjmp	.+3040   	; 0xc3c <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <adc_init>:
volatile uint8_t R0calFlag = 0;

void adc_init()
{
	
	ADMUX = 0x00;
  5e:	17 b8       	out	0x07, r1	; 7
	ADCSRA |= (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0); // pre scaling by 128
  60:	86 b1       	in	r24, 0x06	; 6
  62:	87 68       	ori	r24, 0x87	; 135
  64:	86 b9       	out	0x06, r24	; 6
	ADMUX |= (1<<REFS0);                     // AVCC as reference votage
  66:	3e 9a       	sbi	0x07, 6	; 7
	ADMUX &= ~(1 << ADLAR);   // clear for 10 bit resolution
  68:	3d 98       	cbi	0x07, 5	; 7
	ADCSRA |= 1<<ADIE;          // enable interrupt
  6a:	33 9a       	sbi	0x06, 3	; 6
	MCUCR |= 1<<SM0;             //Sleep mode     //Noise canceling mode
  6c:	85 b7       	in	r24, 0x35	; 53
  6e:	80 61       	ori	r24, 0x10	; 16
  70:	85 bf       	out	0x35, r24	; 53
	MCUCR |= 1<<SE;              //sleep enable
  72:	85 b7       	in	r24, 0x35	; 53
  74:	80 68       	ori	r24, 0x80	; 128
  76:	85 bf       	out	0x35, r24	; 53
	sei();
  78:	78 94       	sei
	ADCSRA |= 1<<ADSC;
  7a:	36 9a       	sbi	0x06, 6	; 6
  7c:	08 95       	ret

0000007e <uart_init>:
}

// function to initialize UART
void uart_init (void)
{
	UBRRH=(BAUDRATE>>8);
  7e:	10 bc       	out	0x20, r1	; 32
	UBRRL=BAUDRATE;                         //set baud rate
  80:	87 e6       	ldi	r24, 0x67	; 103
  82:	89 b9       	out	0x09, r24	; 9
	UCSRB|=(1<<TXEN);             //enable receiver and transmitter
  84:	53 9a       	sbi	0x0a, 3	; 10
	UCSRC|=(1<<URSEL)|(1<<UCSZ0)|(1<<UCSZ1);// 8bit data format
  86:	80 b5       	in	r24, 0x20	; 32
  88:	86 68       	ori	r24, 0x86	; 134
  8a:	80 bd       	out	0x20, r24	; 32
  8c:	08 95       	ret

0000008e <uart_transmit>:
}

// function to send data - NOT REQUIRED FOR THIS PROGRAM IMPLEMENTATION
void uart_transmit (unsigned char data)
{
	while (!( UCSRA & (1<<UDRE)));            // wait while register is free
  8e:	5d 9b       	sbis	0x0b, 5	; 11
  90:	fe cf       	rjmp	.-4      	; 0x8e <uart_transmit>
	UDR = data;                             // load data in the register
  92:	8c b9       	out	0x0c, r24	; 12
  94:	08 95       	ret

00000096 <SendString>:
}

void SendString(char mydata[20])
{
  96:	ef 92       	push	r14
  98:	ff 92       	push	r15
  9a:	0f 93       	push	r16
  9c:	1f 93       	push	r17
  9e:	cf 93       	push	r28
  a0:	df 93       	push	r29
  a2:	8c 01       	movw	r16, r24
  a4:	7c 01       	movw	r14, r24
	int i;
	for(i=0;i<strlen(mydata);i++)
  a6:	c0 e0       	ldi	r28, 0x00	; 0
  a8:	d0 e0       	ldi	r29, 0x00	; 0
  aa:	05 c0       	rjmp	.+10     	; 0xb6 <SendString+0x20>
	{
		uart_transmit(mydata[i]);
  ac:	f7 01       	movw	r30, r14
  ae:	81 91       	ld	r24, Z+
  b0:	7f 01       	movw	r14, r30
  b2:	ed df       	rcall	.-38     	; 0x8e <uart_transmit>
}

void SendString(char mydata[20])
{
	int i;
	for(i=0;i<strlen(mydata);i++)
  b4:	21 96       	adiw	r28, 0x01	; 1
  b6:	f8 01       	movw	r30, r16
  b8:	01 90       	ld	r0, Z+
  ba:	00 20       	and	r0, r0
  bc:	e9 f7       	brne	.-6      	; 0xb8 <SendString+0x22>
  be:	31 97       	sbiw	r30, 0x01	; 1
  c0:	e0 1b       	sub	r30, r16
  c2:	f1 0b       	sbc	r31, r17
  c4:	ce 17       	cp	r28, r30
  c6:	df 07       	cpc	r29, r31
  c8:	88 f3       	brcs	.-30     	; 0xac <SendString+0x16>
	{
		uart_transmit(mydata[i]);
	}
}
  ca:	df 91       	pop	r29
  cc:	cf 91       	pop	r28
  ce:	1f 91       	pop	r17
  d0:	0f 91       	pop	r16
  d2:	ff 90       	pop	r15
  d4:	ef 90       	pop	r14
  d6:	08 95       	ret

000000d8 <timer0_init>:

void timer0_init()
{
	TCNT0=0x00;
  d8:	12 be       	out	0x32, r1	; 50
	TCCR0 = (1<<CS00) | (1<<CS02); // presceler of 1024
  da:	85 e0       	ldi	r24, 0x05	; 5
  dc:	83 bf       	out	0x33, r24	; 51
  de:	08 95       	ret

000000e0 <timer1_init>:
}

void timer1_init()
{
	OCR1A = 7812;
  e0:	84 e8       	ldi	r24, 0x84	; 132
  e2:	9e e1       	ldi	r25, 0x1E	; 30
  e4:	9b bd       	out	0x2b, r25	; 43
  e6:	8a bd       	out	0x2a, r24	; 42

	TCCR1B |= (1 << WGM12);
  e8:	8e b5       	in	r24, 0x2e	; 46
  ea:	88 60       	ori	r24, 0x08	; 8
  ec:	8e bd       	out	0x2e, r24	; 46
	// Mode 4, CTC on OCR1A

	TIMSK |= (1 << OCIE1A);
  ee:	89 b7       	in	r24, 0x39	; 57
  f0:	80 61       	ori	r24, 0x10	; 16
  f2:	89 bf       	out	0x39, r24	; 57
	//Set interrupt on compare match

	TCCR1B |= (1 << CS12) | (1 << CS10);
  f4:	8e b5       	in	r24, 0x2e	; 46
  f6:	85 60       	ori	r24, 0x05	; 5
  f8:	8e bd       	out	0x2e, r24	; 46
	// set prescaler to 1024 and start the timer


	sei();
  fa:	78 94       	sei
  fc:	08 95       	ret

000000fe <__vector_6>:
	// enable interrupts
}

ISR (TIMER1_COMPA_vect)
{
  fe:	1f 92       	push	r1
 100:	0f 92       	push	r0
 102:	0f b6       	in	r0, 0x3f	; 63
 104:	0f 92       	push	r0
 106:	11 24       	eor	r1, r1
 108:	8f 93       	push	r24
	// action to be done every 10ms
	R0calFlag = 1;
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__data_end>
}
 110:	8f 91       	pop	r24
 112:	0f 90       	pop	r0
 114:	0f be       	out	0x3f, r0	; 63
 116:	0f 90       	pop	r0
 118:	1f 90       	pop	r1
 11a:	18 95       	reti

0000011c <main>:


int main(void)
{
 11c:	cf 93       	push	r28
 11e:	df 93       	push	r29
 120:	00 d0       	rcall	.+0      	; 0x122 <main+0x6>
 122:	00 d0       	rcall	.+0      	; 0x124 <main+0x8>
 124:	1f 92       	push	r1
 126:	cd b7       	in	r28, 0x3d	; 61
 128:	de b7       	in	r29, 0x3e	; 62
	uart_init();
 12a:	a9 df       	rcall	.-174    	; 0x7e <uart_init>
	adc_init();
 12c:	98 df       	rcall	.-208    	; 0x5e <adc_init>
	timer0_init();
 12e:	d4 df       	rcall	.-88     	; 0xd8 <timer0_init>
	timer1_init();
 130:	d7 df       	rcall	.-82     	; 0xe0 <timer1_init>
	float sensor_volt; //Define variable for sensor voltage
	float RS_air; //Define variable for sensor resistance
	float R0; //Define variable for R0
	float sensorValue=0; //Define variable for analog readings
 132:	81 2c       	mov	r8, r1
 134:	91 2c       	mov	r9, r1
 136:	54 01       	movw	r10, r8
		{
			sensorValue = sensorValue / 50; //Take average of readings
			sensor_volt = sensorValue * (5.0 / 1023.0); //Convert average to voltage
			RS_air = ((5.0 * 9.76) / sensor_volt) - 9.76; //Calculate RS in fresh air  //RS = [(VC x RL) / VRL] - RL
			R0 = RS_air / 4.4; //Calculate R0, for fresh air:  RS / R0 = 4.4 ppm(mq4) , 9.83(mq2)
			sprintf(mychar,"%.2f",R0);  //This will convert integer into ASCII array
 138:	0f 2e       	mov	r0, r31
 13a:	f0 e6       	ldi	r31, 0x60	; 96
 13c:	cf 2e       	mov	r12, r31
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	df 2e       	mov	r13, r31
 142:	f0 2d       	mov	r31, r0
 144:	ce 01       	movw	r24, r28
 146:	01 96       	adiw	r24, 0x01	; 1
 148:	7c 01       	movw	r14, r24
	timer0_init();
	timer1_init();
	float sensor_volt; //Define variable for sensor voltage
	float RS_air; //Define variable for sensor resistance
	float R0; //Define variable for R0
	float sensorValue=0; //Define variable for analog readings
 14a:	10 e0       	ldi	r17, 0x00	; 0
	char mychar[5];

	
	while (1)
	{
		if(R0calFlag == 1)
 14c:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <__data_end>
 150:	81 30       	cpi	r24, 0x01	; 1
 152:	99 f4       	brne	.+38     	; 0x17a <main+0x5e>
		{
			sensorValue = sensorValue + average; //Add analog values of sensor 50 times
 154:	60 91 6d 00 	lds	r22, 0x006D	; 0x80006d <average>
 158:	70 91 6e 00 	lds	r23, 0x006E	; 0x80006e <average+0x1>
 15c:	80 e0       	ldi	r24, 0x00	; 0
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	82 d1       	rcall	.+772    	; 0x466 <__floatunsisf>
 162:	9b 01       	movw	r18, r22
 164:	ac 01       	movw	r20, r24
 166:	c5 01       	movw	r24, r10
 168:	b4 01       	movw	r22, r8
 16a:	b1 d0       	rcall	.+354    	; 0x2ce <__addsf3>
 16c:	4b 01       	movw	r8, r22
 16e:	5c 01       	movw	r10, r24
			uart_transmit('.');
 170:	8e e2       	ldi	r24, 0x2E	; 46
 172:	8d df       	rcall	.-230    	; 0x8e <uart_transmit>
			R0calFlag = 0;
 174:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <__data_end>
			R0calCount++;
 178:	1f 5f       	subi	r17, 0xFF	; 255
		}
		if (R0calCount == 50)
 17a:	12 33       	cpi	r17, 0x32	; 50
 17c:	39 f7       	brne	.-50     	; 0x14c <main+0x30>
		{
			sensorValue = sensorValue / 50; //Take average of readings
 17e:	20 e0       	ldi	r18, 0x00	; 0
 180:	30 e0       	ldi	r19, 0x00	; 0
 182:	48 e4       	ldi	r20, 0x48	; 72
 184:	52 e4       	ldi	r21, 0x42	; 66
 186:	c5 01       	movw	r24, r10
 188:	b4 01       	movw	r22, r8
 18a:	05 d1       	rcall	.+522    	; 0x396 <__divsf3>
 18c:	4b 01       	movw	r8, r22
 18e:	5c 01       	movw	r10, r24
			sensor_volt = sensorValue * (5.0 / 1023.0); //Convert average to voltage
			RS_air = ((5.0 * 9.76) / sensor_volt) - 9.76; //Calculate RS in fresh air  //RS = [(VC x RL) / VRL] - RL
			R0 = RS_air / 4.4; //Calculate R0, for fresh air:  RS / R0 = 4.4 ppm(mq4) , 9.83(mq2)
			sprintf(mychar,"%.2f",R0);  //This will convert integer into ASCII array
 190:	2a e0       	ldi	r18, 0x0A	; 10
 192:	38 e2       	ldi	r19, 0x28	; 40
 194:	40 ea       	ldi	r20, 0xA0	; 160
 196:	5b e3       	ldi	r21, 0x3B	; 59
 198:	f4 d1       	rcall	.+1000   	; 0x582 <__mulsf3>
 19a:	9b 01       	movw	r18, r22
 19c:	ac 01       	movw	r20, r24
 19e:	64 e3       	ldi	r22, 0x34	; 52
 1a0:	73 e3       	ldi	r23, 0x33	; 51
 1a2:	83 e4       	ldi	r24, 0x43	; 67
 1a4:	92 e4       	ldi	r25, 0x42	; 66
 1a6:	f7 d0       	rcall	.+494    	; 0x396 <__divsf3>
 1a8:	26 ef       	ldi	r18, 0xF6	; 246
 1aa:	38 e2       	ldi	r19, 0x28	; 40
 1ac:	4c e1       	ldi	r20, 0x1C	; 28
 1ae:	51 e4       	ldi	r21, 0x41	; 65
 1b0:	8d d0       	rcall	.+282    	; 0x2cc <__subsf3>
 1b2:	2d ec       	ldi	r18, 0xCD	; 205
 1b4:	3c ec       	ldi	r19, 0xCC	; 204
 1b6:	4c e8       	ldi	r20, 0x8C	; 140
 1b8:	50 e4       	ldi	r21, 0x40	; 64
 1ba:	ed d0       	rcall	.+474    	; 0x396 <__divsf3>
 1bc:	9f 93       	push	r25
 1be:	8f 93       	push	r24
 1c0:	7f 93       	push	r23
 1c2:	6f 93       	push	r22
 1c4:	df 92       	push	r13
 1c6:	cf 92       	push	r12
 1c8:	ff 92       	push	r15
 1ca:	ef 92       	push	r14
 1cc:	5f d2       	rcall	.+1214   	; 0x68c <sprintf>
			SendString("\n\r"); //Line break
 1ce:	85 e6       	ldi	r24, 0x65	; 101
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	61 df       	rcall	.-318    	; 0x96 <SendString>
			SendString("R0=");
 1d4:	88 e6       	ldi	r24, 0x68	; 104
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	5e df       	rcall	.-324    	; 0x96 <SendString>
			SendString(mychar);
 1da:	c7 01       	movw	r24, r14
 1dc:	5c df       	rcall	.-328    	; 0x96 <SendString>
			SendString("\n\r"); //Line break
 1de:	85 e6       	ldi	r24, 0x65	; 101
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	59 df       	rcall	.-334    	; 0x96 <SendString>
 1e4:	0f b6       	in	r0, 0x3f	; 63
 1e6:	f8 94       	cli
 1e8:	de bf       	out	0x3e, r29	; 62
 1ea:	0f be       	out	0x3f, r0	; 63
 1ec:	cd bf       	out	0x3d, r28	; 61
 1ee:	ad cf       	rjmp	.-166    	; 0x14a <main+0x2e>

000001f0 <__vector_14>:


	}
}
ISR(ADC_vect)
{
 1f0:	1f 92       	push	r1
 1f2:	0f 92       	push	r0
 1f4:	0f b6       	in	r0, 0x3f	; 63
 1f6:	0f 92       	push	r0
 1f8:	11 24       	eor	r1, r1
 1fa:	0f 93       	push	r16
 1fc:	1f 93       	push	r17
 1fe:	2f 93       	push	r18
 200:	3f 93       	push	r19
 202:	4f 93       	push	r20
 204:	5f 93       	push	r21
 206:	6f 93       	push	r22
 208:	7f 93       	push	r23
 20a:	8f 93       	push	r24
 20c:	9f 93       	push	r25
 20e:	af 93       	push	r26
 210:	bf 93       	push	r27
 212:	ef 93       	push	r30
 214:	ff 93       	push	r31
	uint8_t theLowADC = ADCL;
 216:	84 b1       	in	r24, 0x04	; 4
	uint16_t theTenBitResults = ADCH<<8 | theLowADC;
 218:	25 b1       	in	r18, 0x05	; 5
	//adcValueBuffer = ADC;
	
	accumulator += theTenBitResults;
 21a:	40 91 71 00 	lds	r20, 0x0071	; 0x800071 <accumulator>
 21e:	50 91 72 00 	lds	r21, 0x0072	; 0x800072 <accumulator+0x1>
 222:	60 91 73 00 	lds	r22, 0x0073	; 0x800073 <accumulator+0x2>
 226:	70 91 74 00 	lds	r23, 0x0074	; 0x800074 <accumulator+0x3>
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	92 2b       	or	r25, r18
 22e:	8a 01       	movw	r16, r20
 230:	9b 01       	movw	r18, r22
 232:	08 0f       	add	r16, r24
 234:	19 1f       	adc	r17, r25
 236:	21 1d       	adc	r18, r1
 238:	31 1d       	adc	r19, r1
 23a:	00 93 71 00 	sts	0x0071, r16	; 0x800071 <accumulator>
 23e:	10 93 72 00 	sts	0x0072, r17	; 0x800072 <accumulator+0x1>
 242:	20 93 73 00 	sts	0x0073, r18	; 0x800073 <accumulator+0x2>
 246:	30 93 74 00 	sts	0x0074, r19	; 0x800074 <accumulator+0x3>
	sample++;
 24a:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <sample>
 24e:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <sample+0x1>
 252:	01 96       	adiw	r24, 0x01	; 1
 254:	90 93 70 00 	sts	0x0070, r25	; 0x800070 <sample+0x1>
 258:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <sample>
	if(sample == 100)
 25c:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <sample>
 260:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <sample+0x1>
 264:	84 36       	cpi	r24, 0x64	; 100
 266:	91 05       	cpc	r25, r1
 268:	e9 f4       	brne	.+58     	; 0x2a4 <__vector_14+0xb4>
	{
		average = accumulator/100;
 26a:	60 91 71 00 	lds	r22, 0x0071	; 0x800071 <accumulator>
 26e:	70 91 72 00 	lds	r23, 0x0072	; 0x800072 <accumulator+0x1>
 272:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <accumulator+0x2>
 276:	90 91 74 00 	lds	r25, 0x0074	; 0x800074 <accumulator+0x3>
 27a:	24 e6       	ldi	r18, 0x64	; 100
 27c:	30 e0       	ldi	r19, 0x00	; 0
 27e:	40 e0       	ldi	r20, 0x00	; 0
 280:	50 e0       	ldi	r21, 0x00	; 0
 282:	e2 d1       	rcall	.+964    	; 0x648 <__udivmodsi4>
 284:	30 93 6e 00 	sts	0x006E, r19	; 0x80006e <average+0x1>
 288:	20 93 6d 00 	sts	0x006D, r18	; 0x80006d <average>
		accumulator = 0;
 28c:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <accumulator>
 290:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <accumulator+0x1>
 294:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <accumulator+0x2>
 298:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <accumulator+0x3>
		sample = 0;
 29c:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <sample+0x1>
 2a0:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <sample>
		//adcValueBufferValidFlag = 1; // This signals that the ADC provided a new value for the code outside the ISR.
	}
	ADCSRA |= 1<<ADSC;
 2a4:	36 9a       	sbi	0x06, 6	; 6
}
 2a6:	ff 91       	pop	r31
 2a8:	ef 91       	pop	r30
 2aa:	bf 91       	pop	r27
 2ac:	af 91       	pop	r26
 2ae:	9f 91       	pop	r25
 2b0:	8f 91       	pop	r24
 2b2:	7f 91       	pop	r23
 2b4:	6f 91       	pop	r22
 2b6:	5f 91       	pop	r21
 2b8:	4f 91       	pop	r20
 2ba:	3f 91       	pop	r19
 2bc:	2f 91       	pop	r18
 2be:	1f 91       	pop	r17
 2c0:	0f 91       	pop	r16
 2c2:	0f 90       	pop	r0
 2c4:	0f be       	out	0x3f, r0	; 63
 2c6:	0f 90       	pop	r0
 2c8:	1f 90       	pop	r1
 2ca:	18 95       	reti

000002cc <__subsf3>:
 2cc:	50 58       	subi	r21, 0x80	; 128

000002ce <__addsf3>:
 2ce:	bb 27       	eor	r27, r27
 2d0:	aa 27       	eor	r26, r26
 2d2:	0e d0       	rcall	.+28     	; 0x2f0 <__addsf3x>
 2d4:	1c c1       	rjmp	.+568    	; 0x50e <__fp_round>
 2d6:	0d d1       	rcall	.+538    	; 0x4f2 <__fp_pscA>
 2d8:	30 f0       	brcs	.+12     	; 0x2e6 <__addsf3+0x18>
 2da:	12 d1       	rcall	.+548    	; 0x500 <__fp_pscB>
 2dc:	20 f0       	brcs	.+8      	; 0x2e6 <__addsf3+0x18>
 2de:	31 f4       	brne	.+12     	; 0x2ec <__addsf3+0x1e>
 2e0:	9f 3f       	cpi	r25, 0xFF	; 255
 2e2:	11 f4       	brne	.+4      	; 0x2e8 <__addsf3+0x1a>
 2e4:	1e f4       	brtc	.+6      	; 0x2ec <__addsf3+0x1e>
 2e6:	02 c1       	rjmp	.+516    	; 0x4ec <__fp_nan>
 2e8:	0e f4       	brtc	.+2      	; 0x2ec <__addsf3+0x1e>
 2ea:	e0 95       	com	r30
 2ec:	e7 fb       	bst	r30, 7
 2ee:	f8 c0       	rjmp	.+496    	; 0x4e0 <__fp_inf>

000002f0 <__addsf3x>:
 2f0:	e9 2f       	mov	r30, r25
 2f2:	1e d1       	rcall	.+572    	; 0x530 <__fp_split3>
 2f4:	80 f3       	brcs	.-32     	; 0x2d6 <__addsf3+0x8>
 2f6:	ba 17       	cp	r27, r26
 2f8:	62 07       	cpc	r22, r18
 2fa:	73 07       	cpc	r23, r19
 2fc:	84 07       	cpc	r24, r20
 2fe:	95 07       	cpc	r25, r21
 300:	18 f0       	brcs	.+6      	; 0x308 <__addsf3x+0x18>
 302:	71 f4       	brne	.+28     	; 0x320 <__addsf3x+0x30>
 304:	9e f5       	brtc	.+102    	; 0x36c <__addsf3x+0x7c>
 306:	36 c1       	rjmp	.+620    	; 0x574 <__fp_zero>
 308:	0e f4       	brtc	.+2      	; 0x30c <__addsf3x+0x1c>
 30a:	e0 95       	com	r30
 30c:	0b 2e       	mov	r0, r27
 30e:	ba 2f       	mov	r27, r26
 310:	a0 2d       	mov	r26, r0
 312:	0b 01       	movw	r0, r22
 314:	b9 01       	movw	r22, r18
 316:	90 01       	movw	r18, r0
 318:	0c 01       	movw	r0, r24
 31a:	ca 01       	movw	r24, r20
 31c:	a0 01       	movw	r20, r0
 31e:	11 24       	eor	r1, r1
 320:	ff 27       	eor	r31, r31
 322:	59 1b       	sub	r21, r25
 324:	99 f0       	breq	.+38     	; 0x34c <__addsf3x+0x5c>
 326:	59 3f       	cpi	r21, 0xF9	; 249
 328:	50 f4       	brcc	.+20     	; 0x33e <__addsf3x+0x4e>
 32a:	50 3e       	cpi	r21, 0xE0	; 224
 32c:	68 f1       	brcs	.+90     	; 0x388 <__addsf3x+0x98>
 32e:	1a 16       	cp	r1, r26
 330:	f0 40       	sbci	r31, 0x00	; 0
 332:	a2 2f       	mov	r26, r18
 334:	23 2f       	mov	r18, r19
 336:	34 2f       	mov	r19, r20
 338:	44 27       	eor	r20, r20
 33a:	58 5f       	subi	r21, 0xF8	; 248
 33c:	f3 cf       	rjmp	.-26     	; 0x324 <__addsf3x+0x34>
 33e:	46 95       	lsr	r20
 340:	37 95       	ror	r19
 342:	27 95       	ror	r18
 344:	a7 95       	ror	r26
 346:	f0 40       	sbci	r31, 0x00	; 0
 348:	53 95       	inc	r21
 34a:	c9 f7       	brne	.-14     	; 0x33e <__addsf3x+0x4e>
 34c:	7e f4       	brtc	.+30     	; 0x36c <__addsf3x+0x7c>
 34e:	1f 16       	cp	r1, r31
 350:	ba 0b       	sbc	r27, r26
 352:	62 0b       	sbc	r22, r18
 354:	73 0b       	sbc	r23, r19
 356:	84 0b       	sbc	r24, r20
 358:	ba f0       	brmi	.+46     	; 0x388 <__addsf3x+0x98>
 35a:	91 50       	subi	r25, 0x01	; 1
 35c:	a1 f0       	breq	.+40     	; 0x386 <__addsf3x+0x96>
 35e:	ff 0f       	add	r31, r31
 360:	bb 1f       	adc	r27, r27
 362:	66 1f       	adc	r22, r22
 364:	77 1f       	adc	r23, r23
 366:	88 1f       	adc	r24, r24
 368:	c2 f7       	brpl	.-16     	; 0x35a <__addsf3x+0x6a>
 36a:	0e c0       	rjmp	.+28     	; 0x388 <__addsf3x+0x98>
 36c:	ba 0f       	add	r27, r26
 36e:	62 1f       	adc	r22, r18
 370:	73 1f       	adc	r23, r19
 372:	84 1f       	adc	r24, r20
 374:	48 f4       	brcc	.+18     	; 0x388 <__addsf3x+0x98>
 376:	87 95       	ror	r24
 378:	77 95       	ror	r23
 37a:	67 95       	ror	r22
 37c:	b7 95       	ror	r27
 37e:	f7 95       	ror	r31
 380:	9e 3f       	cpi	r25, 0xFE	; 254
 382:	08 f0       	brcs	.+2      	; 0x386 <__addsf3x+0x96>
 384:	b3 cf       	rjmp	.-154    	; 0x2ec <__addsf3+0x1e>
 386:	93 95       	inc	r25
 388:	88 0f       	add	r24, r24
 38a:	08 f0       	brcs	.+2      	; 0x38e <__addsf3x+0x9e>
 38c:	99 27       	eor	r25, r25
 38e:	ee 0f       	add	r30, r30
 390:	97 95       	ror	r25
 392:	87 95       	ror	r24
 394:	08 95       	ret

00000396 <__divsf3>:
 396:	0c d0       	rcall	.+24     	; 0x3b0 <__divsf3x>
 398:	ba c0       	rjmp	.+372    	; 0x50e <__fp_round>
 39a:	b2 d0       	rcall	.+356    	; 0x500 <__fp_pscB>
 39c:	40 f0       	brcs	.+16     	; 0x3ae <__divsf3+0x18>
 39e:	a9 d0       	rcall	.+338    	; 0x4f2 <__fp_pscA>
 3a0:	30 f0       	brcs	.+12     	; 0x3ae <__divsf3+0x18>
 3a2:	21 f4       	brne	.+8      	; 0x3ac <__divsf3+0x16>
 3a4:	5f 3f       	cpi	r21, 0xFF	; 255
 3a6:	19 f0       	breq	.+6      	; 0x3ae <__divsf3+0x18>
 3a8:	9b c0       	rjmp	.+310    	; 0x4e0 <__fp_inf>
 3aa:	51 11       	cpse	r21, r1
 3ac:	e4 c0       	rjmp	.+456    	; 0x576 <__fp_szero>
 3ae:	9e c0       	rjmp	.+316    	; 0x4ec <__fp_nan>

000003b0 <__divsf3x>:
 3b0:	bf d0       	rcall	.+382    	; 0x530 <__fp_split3>
 3b2:	98 f3       	brcs	.-26     	; 0x39a <__divsf3+0x4>

000003b4 <__divsf3_pse>:
 3b4:	99 23       	and	r25, r25
 3b6:	c9 f3       	breq	.-14     	; 0x3aa <__divsf3+0x14>
 3b8:	55 23       	and	r21, r21
 3ba:	b1 f3       	breq	.-20     	; 0x3a8 <__divsf3+0x12>
 3bc:	95 1b       	sub	r25, r21
 3be:	55 0b       	sbc	r21, r21
 3c0:	bb 27       	eor	r27, r27
 3c2:	aa 27       	eor	r26, r26
 3c4:	62 17       	cp	r22, r18
 3c6:	73 07       	cpc	r23, r19
 3c8:	84 07       	cpc	r24, r20
 3ca:	38 f0       	brcs	.+14     	; 0x3da <__divsf3_pse+0x26>
 3cc:	9f 5f       	subi	r25, 0xFF	; 255
 3ce:	5f 4f       	sbci	r21, 0xFF	; 255
 3d0:	22 0f       	add	r18, r18
 3d2:	33 1f       	adc	r19, r19
 3d4:	44 1f       	adc	r20, r20
 3d6:	aa 1f       	adc	r26, r26
 3d8:	a9 f3       	breq	.-22     	; 0x3c4 <__divsf3_pse+0x10>
 3da:	33 d0       	rcall	.+102    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 3dc:	0e 2e       	mov	r0, r30
 3de:	3a f0       	brmi	.+14     	; 0x3ee <__divsf3_pse+0x3a>
 3e0:	e0 e8       	ldi	r30, 0x80	; 128
 3e2:	30 d0       	rcall	.+96     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 3e4:	91 50       	subi	r25, 0x01	; 1
 3e6:	50 40       	sbci	r21, 0x00	; 0
 3e8:	e6 95       	lsr	r30
 3ea:	00 1c       	adc	r0, r0
 3ec:	ca f7       	brpl	.-14     	; 0x3e0 <__divsf3_pse+0x2c>
 3ee:	29 d0       	rcall	.+82     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 3f0:	fe 2f       	mov	r31, r30
 3f2:	27 d0       	rcall	.+78     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 3f4:	66 0f       	add	r22, r22
 3f6:	77 1f       	adc	r23, r23
 3f8:	88 1f       	adc	r24, r24
 3fa:	bb 1f       	adc	r27, r27
 3fc:	26 17       	cp	r18, r22
 3fe:	37 07       	cpc	r19, r23
 400:	48 07       	cpc	r20, r24
 402:	ab 07       	cpc	r26, r27
 404:	b0 e8       	ldi	r27, 0x80	; 128
 406:	09 f0       	breq	.+2      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 408:	bb 0b       	sbc	r27, r27
 40a:	80 2d       	mov	r24, r0
 40c:	bf 01       	movw	r22, r30
 40e:	ff 27       	eor	r31, r31
 410:	93 58       	subi	r25, 0x83	; 131
 412:	5f 4f       	sbci	r21, 0xFF	; 255
 414:	2a f0       	brmi	.+10     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 416:	9e 3f       	cpi	r25, 0xFE	; 254
 418:	51 05       	cpc	r21, r1
 41a:	68 f0       	brcs	.+26     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 41c:	61 c0       	rjmp	.+194    	; 0x4e0 <__fp_inf>
 41e:	ab c0       	rjmp	.+342    	; 0x576 <__fp_szero>
 420:	5f 3f       	cpi	r21, 0xFF	; 255
 422:	ec f3       	brlt	.-6      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 424:	98 3e       	cpi	r25, 0xE8	; 232
 426:	dc f3       	brlt	.-10     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 428:	86 95       	lsr	r24
 42a:	77 95       	ror	r23
 42c:	67 95       	ror	r22
 42e:	b7 95       	ror	r27
 430:	f7 95       	ror	r31
 432:	9f 5f       	subi	r25, 0xFF	; 255
 434:	c9 f7       	brne	.-14     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 436:	88 0f       	add	r24, r24
 438:	91 1d       	adc	r25, r1
 43a:	96 95       	lsr	r25
 43c:	87 95       	ror	r24
 43e:	97 f9       	bld	r25, 7
 440:	08 95       	ret
 442:	e1 e0       	ldi	r30, 0x01	; 1
 444:	66 0f       	add	r22, r22
 446:	77 1f       	adc	r23, r23
 448:	88 1f       	adc	r24, r24
 44a:	bb 1f       	adc	r27, r27
 44c:	62 17       	cp	r22, r18
 44e:	73 07       	cpc	r23, r19
 450:	84 07       	cpc	r24, r20
 452:	ba 07       	cpc	r27, r26
 454:	20 f0       	brcs	.+8      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 456:	62 1b       	sub	r22, r18
 458:	73 0b       	sbc	r23, r19
 45a:	84 0b       	sbc	r24, r20
 45c:	ba 0b       	sbc	r27, r26
 45e:	ee 1f       	adc	r30, r30
 460:	88 f7       	brcc	.-30     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 462:	e0 95       	com	r30
 464:	08 95       	ret

00000466 <__floatunsisf>:
 466:	e8 94       	clt
 468:	09 c0       	rjmp	.+18     	; 0x47c <__floatsisf+0x12>

0000046a <__floatsisf>:
 46a:	97 fb       	bst	r25, 7
 46c:	3e f4       	brtc	.+14     	; 0x47c <__floatsisf+0x12>
 46e:	90 95       	com	r25
 470:	80 95       	com	r24
 472:	70 95       	com	r23
 474:	61 95       	neg	r22
 476:	7f 4f       	sbci	r23, 0xFF	; 255
 478:	8f 4f       	sbci	r24, 0xFF	; 255
 47a:	9f 4f       	sbci	r25, 0xFF	; 255
 47c:	99 23       	and	r25, r25
 47e:	a9 f0       	breq	.+42     	; 0x4aa <__floatsisf+0x40>
 480:	f9 2f       	mov	r31, r25
 482:	96 e9       	ldi	r25, 0x96	; 150
 484:	bb 27       	eor	r27, r27
 486:	93 95       	inc	r25
 488:	f6 95       	lsr	r31
 48a:	87 95       	ror	r24
 48c:	77 95       	ror	r23
 48e:	67 95       	ror	r22
 490:	b7 95       	ror	r27
 492:	f1 11       	cpse	r31, r1
 494:	f8 cf       	rjmp	.-16     	; 0x486 <__floatsisf+0x1c>
 496:	fa f4       	brpl	.+62     	; 0x4d6 <__floatsisf+0x6c>
 498:	bb 0f       	add	r27, r27
 49a:	11 f4       	brne	.+4      	; 0x4a0 <__floatsisf+0x36>
 49c:	60 ff       	sbrs	r22, 0
 49e:	1b c0       	rjmp	.+54     	; 0x4d6 <__floatsisf+0x6c>
 4a0:	6f 5f       	subi	r22, 0xFF	; 255
 4a2:	7f 4f       	sbci	r23, 0xFF	; 255
 4a4:	8f 4f       	sbci	r24, 0xFF	; 255
 4a6:	9f 4f       	sbci	r25, 0xFF	; 255
 4a8:	16 c0       	rjmp	.+44     	; 0x4d6 <__floatsisf+0x6c>
 4aa:	88 23       	and	r24, r24
 4ac:	11 f0       	breq	.+4      	; 0x4b2 <__floatsisf+0x48>
 4ae:	96 e9       	ldi	r25, 0x96	; 150
 4b0:	11 c0       	rjmp	.+34     	; 0x4d4 <__floatsisf+0x6a>
 4b2:	77 23       	and	r23, r23
 4b4:	21 f0       	breq	.+8      	; 0x4be <__floatsisf+0x54>
 4b6:	9e e8       	ldi	r25, 0x8E	; 142
 4b8:	87 2f       	mov	r24, r23
 4ba:	76 2f       	mov	r23, r22
 4bc:	05 c0       	rjmp	.+10     	; 0x4c8 <__floatsisf+0x5e>
 4be:	66 23       	and	r22, r22
 4c0:	71 f0       	breq	.+28     	; 0x4de <__floatsisf+0x74>
 4c2:	96 e8       	ldi	r25, 0x86	; 134
 4c4:	86 2f       	mov	r24, r22
 4c6:	70 e0       	ldi	r23, 0x00	; 0
 4c8:	60 e0       	ldi	r22, 0x00	; 0
 4ca:	2a f0       	brmi	.+10     	; 0x4d6 <__floatsisf+0x6c>
 4cc:	9a 95       	dec	r25
 4ce:	66 0f       	add	r22, r22
 4d0:	77 1f       	adc	r23, r23
 4d2:	88 1f       	adc	r24, r24
 4d4:	da f7       	brpl	.-10     	; 0x4cc <__floatsisf+0x62>
 4d6:	88 0f       	add	r24, r24
 4d8:	96 95       	lsr	r25
 4da:	87 95       	ror	r24
 4dc:	97 f9       	bld	r25, 7
 4de:	08 95       	ret

000004e0 <__fp_inf>:
 4e0:	97 f9       	bld	r25, 7
 4e2:	9f 67       	ori	r25, 0x7F	; 127
 4e4:	80 e8       	ldi	r24, 0x80	; 128
 4e6:	70 e0       	ldi	r23, 0x00	; 0
 4e8:	60 e0       	ldi	r22, 0x00	; 0
 4ea:	08 95       	ret

000004ec <__fp_nan>:
 4ec:	9f ef       	ldi	r25, 0xFF	; 255
 4ee:	80 ec       	ldi	r24, 0xC0	; 192
 4f0:	08 95       	ret

000004f2 <__fp_pscA>:
 4f2:	00 24       	eor	r0, r0
 4f4:	0a 94       	dec	r0
 4f6:	16 16       	cp	r1, r22
 4f8:	17 06       	cpc	r1, r23
 4fa:	18 06       	cpc	r1, r24
 4fc:	09 06       	cpc	r0, r25
 4fe:	08 95       	ret

00000500 <__fp_pscB>:
 500:	00 24       	eor	r0, r0
 502:	0a 94       	dec	r0
 504:	12 16       	cp	r1, r18
 506:	13 06       	cpc	r1, r19
 508:	14 06       	cpc	r1, r20
 50a:	05 06       	cpc	r0, r21
 50c:	08 95       	ret

0000050e <__fp_round>:
 50e:	09 2e       	mov	r0, r25
 510:	03 94       	inc	r0
 512:	00 0c       	add	r0, r0
 514:	11 f4       	brne	.+4      	; 0x51a <__fp_round+0xc>
 516:	88 23       	and	r24, r24
 518:	52 f0       	brmi	.+20     	; 0x52e <__fp_round+0x20>
 51a:	bb 0f       	add	r27, r27
 51c:	40 f4       	brcc	.+16     	; 0x52e <__fp_round+0x20>
 51e:	bf 2b       	or	r27, r31
 520:	11 f4       	brne	.+4      	; 0x526 <__fp_round+0x18>
 522:	60 ff       	sbrs	r22, 0
 524:	04 c0       	rjmp	.+8      	; 0x52e <__fp_round+0x20>
 526:	6f 5f       	subi	r22, 0xFF	; 255
 528:	7f 4f       	sbci	r23, 0xFF	; 255
 52a:	8f 4f       	sbci	r24, 0xFF	; 255
 52c:	9f 4f       	sbci	r25, 0xFF	; 255
 52e:	08 95       	ret

00000530 <__fp_split3>:
 530:	57 fd       	sbrc	r21, 7
 532:	90 58       	subi	r25, 0x80	; 128
 534:	44 0f       	add	r20, r20
 536:	55 1f       	adc	r21, r21
 538:	59 f0       	breq	.+22     	; 0x550 <__fp_splitA+0x10>
 53a:	5f 3f       	cpi	r21, 0xFF	; 255
 53c:	71 f0       	breq	.+28     	; 0x55a <__fp_splitA+0x1a>
 53e:	47 95       	ror	r20

00000540 <__fp_splitA>:
 540:	88 0f       	add	r24, r24
 542:	97 fb       	bst	r25, 7
 544:	99 1f       	adc	r25, r25
 546:	61 f0       	breq	.+24     	; 0x560 <__fp_splitA+0x20>
 548:	9f 3f       	cpi	r25, 0xFF	; 255
 54a:	79 f0       	breq	.+30     	; 0x56a <__fp_splitA+0x2a>
 54c:	87 95       	ror	r24
 54e:	08 95       	ret
 550:	12 16       	cp	r1, r18
 552:	13 06       	cpc	r1, r19
 554:	14 06       	cpc	r1, r20
 556:	55 1f       	adc	r21, r21
 558:	f2 cf       	rjmp	.-28     	; 0x53e <__fp_split3+0xe>
 55a:	46 95       	lsr	r20
 55c:	f1 df       	rcall	.-30     	; 0x540 <__fp_splitA>
 55e:	08 c0       	rjmp	.+16     	; 0x570 <__fp_splitA+0x30>
 560:	16 16       	cp	r1, r22
 562:	17 06       	cpc	r1, r23
 564:	18 06       	cpc	r1, r24
 566:	99 1f       	adc	r25, r25
 568:	f1 cf       	rjmp	.-30     	; 0x54c <__fp_splitA+0xc>
 56a:	86 95       	lsr	r24
 56c:	71 05       	cpc	r23, r1
 56e:	61 05       	cpc	r22, r1
 570:	08 94       	sec
 572:	08 95       	ret

00000574 <__fp_zero>:
 574:	e8 94       	clt

00000576 <__fp_szero>:
 576:	bb 27       	eor	r27, r27
 578:	66 27       	eor	r22, r22
 57a:	77 27       	eor	r23, r23
 57c:	cb 01       	movw	r24, r22
 57e:	97 f9       	bld	r25, 7
 580:	08 95       	ret

00000582 <__mulsf3>:
 582:	0b d0       	rcall	.+22     	; 0x59a <__mulsf3x>
 584:	c4 cf       	rjmp	.-120    	; 0x50e <__fp_round>
 586:	b5 df       	rcall	.-150    	; 0x4f2 <__fp_pscA>
 588:	28 f0       	brcs	.+10     	; 0x594 <__mulsf3+0x12>
 58a:	ba df       	rcall	.-140    	; 0x500 <__fp_pscB>
 58c:	18 f0       	brcs	.+6      	; 0x594 <__mulsf3+0x12>
 58e:	95 23       	and	r25, r21
 590:	09 f0       	breq	.+2      	; 0x594 <__mulsf3+0x12>
 592:	a6 cf       	rjmp	.-180    	; 0x4e0 <__fp_inf>
 594:	ab cf       	rjmp	.-170    	; 0x4ec <__fp_nan>
 596:	11 24       	eor	r1, r1
 598:	ee cf       	rjmp	.-36     	; 0x576 <__fp_szero>

0000059a <__mulsf3x>:
 59a:	ca df       	rcall	.-108    	; 0x530 <__fp_split3>
 59c:	a0 f3       	brcs	.-24     	; 0x586 <__mulsf3+0x4>

0000059e <__mulsf3_pse>:
 59e:	95 9f       	mul	r25, r21
 5a0:	d1 f3       	breq	.-12     	; 0x596 <__mulsf3+0x14>
 5a2:	95 0f       	add	r25, r21
 5a4:	50 e0       	ldi	r21, 0x00	; 0
 5a6:	55 1f       	adc	r21, r21
 5a8:	62 9f       	mul	r22, r18
 5aa:	f0 01       	movw	r30, r0
 5ac:	72 9f       	mul	r23, r18
 5ae:	bb 27       	eor	r27, r27
 5b0:	f0 0d       	add	r31, r0
 5b2:	b1 1d       	adc	r27, r1
 5b4:	63 9f       	mul	r22, r19
 5b6:	aa 27       	eor	r26, r26
 5b8:	f0 0d       	add	r31, r0
 5ba:	b1 1d       	adc	r27, r1
 5bc:	aa 1f       	adc	r26, r26
 5be:	64 9f       	mul	r22, r20
 5c0:	66 27       	eor	r22, r22
 5c2:	b0 0d       	add	r27, r0
 5c4:	a1 1d       	adc	r26, r1
 5c6:	66 1f       	adc	r22, r22
 5c8:	82 9f       	mul	r24, r18
 5ca:	22 27       	eor	r18, r18
 5cc:	b0 0d       	add	r27, r0
 5ce:	a1 1d       	adc	r26, r1
 5d0:	62 1f       	adc	r22, r18
 5d2:	73 9f       	mul	r23, r19
 5d4:	b0 0d       	add	r27, r0
 5d6:	a1 1d       	adc	r26, r1
 5d8:	62 1f       	adc	r22, r18
 5da:	83 9f       	mul	r24, r19
 5dc:	a0 0d       	add	r26, r0
 5de:	61 1d       	adc	r22, r1
 5e0:	22 1f       	adc	r18, r18
 5e2:	74 9f       	mul	r23, r20
 5e4:	33 27       	eor	r19, r19
 5e6:	a0 0d       	add	r26, r0
 5e8:	61 1d       	adc	r22, r1
 5ea:	23 1f       	adc	r18, r19
 5ec:	84 9f       	mul	r24, r20
 5ee:	60 0d       	add	r22, r0
 5f0:	21 1d       	adc	r18, r1
 5f2:	82 2f       	mov	r24, r18
 5f4:	76 2f       	mov	r23, r22
 5f6:	6a 2f       	mov	r22, r26
 5f8:	11 24       	eor	r1, r1
 5fa:	9f 57       	subi	r25, 0x7F	; 127
 5fc:	50 40       	sbci	r21, 0x00	; 0
 5fe:	8a f0       	brmi	.+34     	; 0x622 <__mulsf3_pse+0x84>
 600:	e1 f0       	breq	.+56     	; 0x63a <__mulsf3_pse+0x9c>
 602:	88 23       	and	r24, r24
 604:	4a f0       	brmi	.+18     	; 0x618 <__mulsf3_pse+0x7a>
 606:	ee 0f       	add	r30, r30
 608:	ff 1f       	adc	r31, r31
 60a:	bb 1f       	adc	r27, r27
 60c:	66 1f       	adc	r22, r22
 60e:	77 1f       	adc	r23, r23
 610:	88 1f       	adc	r24, r24
 612:	91 50       	subi	r25, 0x01	; 1
 614:	50 40       	sbci	r21, 0x00	; 0
 616:	a9 f7       	brne	.-22     	; 0x602 <__mulsf3_pse+0x64>
 618:	9e 3f       	cpi	r25, 0xFE	; 254
 61a:	51 05       	cpc	r21, r1
 61c:	70 f0       	brcs	.+28     	; 0x63a <__mulsf3_pse+0x9c>
 61e:	60 cf       	rjmp	.-320    	; 0x4e0 <__fp_inf>
 620:	aa cf       	rjmp	.-172    	; 0x576 <__fp_szero>
 622:	5f 3f       	cpi	r21, 0xFF	; 255
 624:	ec f3       	brlt	.-6      	; 0x620 <__mulsf3_pse+0x82>
 626:	98 3e       	cpi	r25, 0xE8	; 232
 628:	dc f3       	brlt	.-10     	; 0x620 <__mulsf3_pse+0x82>
 62a:	86 95       	lsr	r24
 62c:	77 95       	ror	r23
 62e:	67 95       	ror	r22
 630:	b7 95       	ror	r27
 632:	f7 95       	ror	r31
 634:	e7 95       	ror	r30
 636:	9f 5f       	subi	r25, 0xFF	; 255
 638:	c1 f7       	brne	.-16     	; 0x62a <__mulsf3_pse+0x8c>
 63a:	fe 2b       	or	r31, r30
 63c:	88 0f       	add	r24, r24
 63e:	91 1d       	adc	r25, r1
 640:	96 95       	lsr	r25
 642:	87 95       	ror	r24
 644:	97 f9       	bld	r25, 7
 646:	08 95       	ret

00000648 <__udivmodsi4>:
 648:	a1 e2       	ldi	r26, 0x21	; 33
 64a:	1a 2e       	mov	r1, r26
 64c:	aa 1b       	sub	r26, r26
 64e:	bb 1b       	sub	r27, r27
 650:	fd 01       	movw	r30, r26
 652:	0d c0       	rjmp	.+26     	; 0x66e <__udivmodsi4_ep>

00000654 <__udivmodsi4_loop>:
 654:	aa 1f       	adc	r26, r26
 656:	bb 1f       	adc	r27, r27
 658:	ee 1f       	adc	r30, r30
 65a:	ff 1f       	adc	r31, r31
 65c:	a2 17       	cp	r26, r18
 65e:	b3 07       	cpc	r27, r19
 660:	e4 07       	cpc	r30, r20
 662:	f5 07       	cpc	r31, r21
 664:	20 f0       	brcs	.+8      	; 0x66e <__udivmodsi4_ep>
 666:	a2 1b       	sub	r26, r18
 668:	b3 0b       	sbc	r27, r19
 66a:	e4 0b       	sbc	r30, r20
 66c:	f5 0b       	sbc	r31, r21

0000066e <__udivmodsi4_ep>:
 66e:	66 1f       	adc	r22, r22
 670:	77 1f       	adc	r23, r23
 672:	88 1f       	adc	r24, r24
 674:	99 1f       	adc	r25, r25
 676:	1a 94       	dec	r1
 678:	69 f7       	brne	.-38     	; 0x654 <__udivmodsi4_loop>
 67a:	60 95       	com	r22
 67c:	70 95       	com	r23
 67e:	80 95       	com	r24
 680:	90 95       	com	r25
 682:	9b 01       	movw	r18, r22
 684:	ac 01       	movw	r20, r24
 686:	bd 01       	movw	r22, r26
 688:	cf 01       	movw	r24, r30
 68a:	08 95       	ret

0000068c <sprintf>:
 68c:	ae e0       	ldi	r26, 0x0E	; 14
 68e:	b0 e0       	ldi	r27, 0x00	; 0
 690:	eb e4       	ldi	r30, 0x4B	; 75
 692:	f3 e0       	ldi	r31, 0x03	; 3
 694:	aa c2       	rjmp	.+1364   	; 0xbea <__prologue_saves__+0x1c>
 696:	0d 89       	ldd	r16, Y+21	; 0x15
 698:	1e 89       	ldd	r17, Y+22	; 0x16
 69a:	86 e0       	ldi	r24, 0x06	; 6
 69c:	8c 83       	std	Y+4, r24	; 0x04
 69e:	1a 83       	std	Y+2, r17	; 0x02
 6a0:	09 83       	std	Y+1, r16	; 0x01
 6a2:	8f ef       	ldi	r24, 0xFF	; 255
 6a4:	9f e7       	ldi	r25, 0x7F	; 127
 6a6:	9e 83       	std	Y+6, r25	; 0x06
 6a8:	8d 83       	std	Y+5, r24	; 0x05
 6aa:	ae 01       	movw	r20, r28
 6ac:	47 5e       	subi	r20, 0xE7	; 231
 6ae:	5f 4f       	sbci	r21, 0xFF	; 255
 6b0:	6f 89       	ldd	r22, Y+23	; 0x17
 6b2:	78 8d       	ldd	r23, Y+24	; 0x18
 6b4:	ce 01       	movw	r24, r28
 6b6:	01 96       	adiw	r24, 0x01	; 1
 6b8:	08 d0       	rcall	.+16     	; 0x6ca <vfprintf>
 6ba:	ef 81       	ldd	r30, Y+7	; 0x07
 6bc:	f8 85       	ldd	r31, Y+8	; 0x08
 6be:	e0 0f       	add	r30, r16
 6c0:	f1 1f       	adc	r31, r17
 6c2:	10 82       	st	Z, r1
 6c4:	2e 96       	adiw	r28, 0x0e	; 14
 6c6:	e4 e0       	ldi	r30, 0x04	; 4
 6c8:	ac c2       	rjmp	.+1368   	; 0xc22 <__epilogue_restores__+0x1c>

000006ca <vfprintf>:
 6ca:	ab e0       	ldi	r26, 0x0B	; 11
 6cc:	b0 e0       	ldi	r27, 0x00	; 0
 6ce:	ea e6       	ldi	r30, 0x6A	; 106
 6d0:	f3 e0       	ldi	r31, 0x03	; 3
 6d2:	7d c2       	rjmp	.+1274   	; 0xbce <__prologue_saves__>
 6d4:	6c 01       	movw	r12, r24
 6d6:	7b 01       	movw	r14, r22
 6d8:	8a 01       	movw	r16, r20
 6da:	fc 01       	movw	r30, r24
 6dc:	17 82       	std	Z+7, r1	; 0x07
 6de:	16 82       	std	Z+6, r1	; 0x06
 6e0:	83 81       	ldd	r24, Z+3	; 0x03
 6e2:	81 ff       	sbrs	r24, 1
 6e4:	bf c1       	rjmp	.+894    	; 0xa64 <vfprintf+0x39a>
 6e6:	ce 01       	movw	r24, r28
 6e8:	01 96       	adiw	r24, 0x01	; 1
 6ea:	3c 01       	movw	r6, r24
 6ec:	f6 01       	movw	r30, r12
 6ee:	93 81       	ldd	r25, Z+3	; 0x03
 6f0:	f7 01       	movw	r30, r14
 6f2:	93 fd       	sbrc	r25, 3
 6f4:	85 91       	lpm	r24, Z+
 6f6:	93 ff       	sbrs	r25, 3
 6f8:	81 91       	ld	r24, Z+
 6fa:	7f 01       	movw	r14, r30
 6fc:	88 23       	and	r24, r24
 6fe:	09 f4       	brne	.+2      	; 0x702 <vfprintf+0x38>
 700:	ad c1       	rjmp	.+858    	; 0xa5c <vfprintf+0x392>
 702:	85 32       	cpi	r24, 0x25	; 37
 704:	39 f4       	brne	.+14     	; 0x714 <vfprintf+0x4a>
 706:	93 fd       	sbrc	r25, 3
 708:	85 91       	lpm	r24, Z+
 70a:	93 ff       	sbrs	r25, 3
 70c:	81 91       	ld	r24, Z+
 70e:	7f 01       	movw	r14, r30
 710:	85 32       	cpi	r24, 0x25	; 37
 712:	21 f4       	brne	.+8      	; 0x71c <vfprintf+0x52>
 714:	b6 01       	movw	r22, r12
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	c0 d1       	rcall	.+896    	; 0xa9a <fputc>
 71a:	e8 cf       	rjmp	.-48     	; 0x6ec <vfprintf+0x22>
 71c:	91 2c       	mov	r9, r1
 71e:	21 2c       	mov	r2, r1
 720:	31 2c       	mov	r3, r1
 722:	ff e1       	ldi	r31, 0x1F	; 31
 724:	f3 15       	cp	r31, r3
 726:	d8 f0       	brcs	.+54     	; 0x75e <vfprintf+0x94>
 728:	8b 32       	cpi	r24, 0x2B	; 43
 72a:	79 f0       	breq	.+30     	; 0x74a <vfprintf+0x80>
 72c:	38 f4       	brcc	.+14     	; 0x73c <vfprintf+0x72>
 72e:	80 32       	cpi	r24, 0x20	; 32
 730:	79 f0       	breq	.+30     	; 0x750 <vfprintf+0x86>
 732:	83 32       	cpi	r24, 0x23	; 35
 734:	a1 f4       	brne	.+40     	; 0x75e <vfprintf+0x94>
 736:	23 2d       	mov	r18, r3
 738:	20 61       	ori	r18, 0x10	; 16
 73a:	1d c0       	rjmp	.+58     	; 0x776 <vfprintf+0xac>
 73c:	8d 32       	cpi	r24, 0x2D	; 45
 73e:	61 f0       	breq	.+24     	; 0x758 <vfprintf+0x8e>
 740:	80 33       	cpi	r24, 0x30	; 48
 742:	69 f4       	brne	.+26     	; 0x75e <vfprintf+0x94>
 744:	23 2d       	mov	r18, r3
 746:	21 60       	ori	r18, 0x01	; 1
 748:	16 c0       	rjmp	.+44     	; 0x776 <vfprintf+0xac>
 74a:	83 2d       	mov	r24, r3
 74c:	82 60       	ori	r24, 0x02	; 2
 74e:	38 2e       	mov	r3, r24
 750:	e3 2d       	mov	r30, r3
 752:	e4 60       	ori	r30, 0x04	; 4
 754:	3e 2e       	mov	r3, r30
 756:	2a c0       	rjmp	.+84     	; 0x7ac <vfprintf+0xe2>
 758:	f3 2d       	mov	r31, r3
 75a:	f8 60       	ori	r31, 0x08	; 8
 75c:	1d c0       	rjmp	.+58     	; 0x798 <vfprintf+0xce>
 75e:	37 fc       	sbrc	r3, 7
 760:	2d c0       	rjmp	.+90     	; 0x7bc <vfprintf+0xf2>
 762:	20 ed       	ldi	r18, 0xD0	; 208
 764:	28 0f       	add	r18, r24
 766:	2a 30       	cpi	r18, 0x0A	; 10
 768:	40 f0       	brcs	.+16     	; 0x77a <vfprintf+0xb0>
 76a:	8e 32       	cpi	r24, 0x2E	; 46
 76c:	b9 f4       	brne	.+46     	; 0x79c <vfprintf+0xd2>
 76e:	36 fc       	sbrc	r3, 6
 770:	75 c1       	rjmp	.+746    	; 0xa5c <vfprintf+0x392>
 772:	23 2d       	mov	r18, r3
 774:	20 64       	ori	r18, 0x40	; 64
 776:	32 2e       	mov	r3, r18
 778:	19 c0       	rjmp	.+50     	; 0x7ac <vfprintf+0xe2>
 77a:	36 fe       	sbrs	r3, 6
 77c:	06 c0       	rjmp	.+12     	; 0x78a <vfprintf+0xc0>
 77e:	8a e0       	ldi	r24, 0x0A	; 10
 780:	98 9e       	mul	r9, r24
 782:	20 0d       	add	r18, r0
 784:	11 24       	eor	r1, r1
 786:	92 2e       	mov	r9, r18
 788:	11 c0       	rjmp	.+34     	; 0x7ac <vfprintf+0xe2>
 78a:	ea e0       	ldi	r30, 0x0A	; 10
 78c:	2e 9e       	mul	r2, r30
 78e:	20 0d       	add	r18, r0
 790:	11 24       	eor	r1, r1
 792:	22 2e       	mov	r2, r18
 794:	f3 2d       	mov	r31, r3
 796:	f0 62       	ori	r31, 0x20	; 32
 798:	3f 2e       	mov	r3, r31
 79a:	08 c0       	rjmp	.+16     	; 0x7ac <vfprintf+0xe2>
 79c:	8c 36       	cpi	r24, 0x6C	; 108
 79e:	21 f4       	brne	.+8      	; 0x7a8 <vfprintf+0xde>
 7a0:	83 2d       	mov	r24, r3
 7a2:	80 68       	ori	r24, 0x80	; 128
 7a4:	38 2e       	mov	r3, r24
 7a6:	02 c0       	rjmp	.+4      	; 0x7ac <vfprintf+0xe2>
 7a8:	88 36       	cpi	r24, 0x68	; 104
 7aa:	41 f4       	brne	.+16     	; 0x7bc <vfprintf+0xf2>
 7ac:	f7 01       	movw	r30, r14
 7ae:	93 fd       	sbrc	r25, 3
 7b0:	85 91       	lpm	r24, Z+
 7b2:	93 ff       	sbrs	r25, 3
 7b4:	81 91       	ld	r24, Z+
 7b6:	7f 01       	movw	r14, r30
 7b8:	81 11       	cpse	r24, r1
 7ba:	b3 cf       	rjmp	.-154    	; 0x722 <vfprintf+0x58>
 7bc:	98 2f       	mov	r25, r24
 7be:	9f 7d       	andi	r25, 0xDF	; 223
 7c0:	95 54       	subi	r25, 0x45	; 69
 7c2:	93 30       	cpi	r25, 0x03	; 3
 7c4:	28 f4       	brcc	.+10     	; 0x7d0 <vfprintf+0x106>
 7c6:	0c 5f       	subi	r16, 0xFC	; 252
 7c8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ca:	9f e3       	ldi	r25, 0x3F	; 63
 7cc:	99 83       	std	Y+1, r25	; 0x01
 7ce:	0d c0       	rjmp	.+26     	; 0x7ea <vfprintf+0x120>
 7d0:	83 36       	cpi	r24, 0x63	; 99
 7d2:	31 f0       	breq	.+12     	; 0x7e0 <vfprintf+0x116>
 7d4:	83 37       	cpi	r24, 0x73	; 115
 7d6:	71 f0       	breq	.+28     	; 0x7f4 <vfprintf+0x12a>
 7d8:	83 35       	cpi	r24, 0x53	; 83
 7da:	09 f0       	breq	.+2      	; 0x7de <vfprintf+0x114>
 7dc:	55 c0       	rjmp	.+170    	; 0x888 <vfprintf+0x1be>
 7de:	20 c0       	rjmp	.+64     	; 0x820 <vfprintf+0x156>
 7e0:	f8 01       	movw	r30, r16
 7e2:	80 81       	ld	r24, Z
 7e4:	89 83       	std	Y+1, r24	; 0x01
 7e6:	0e 5f       	subi	r16, 0xFE	; 254
 7e8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ea:	88 24       	eor	r8, r8
 7ec:	83 94       	inc	r8
 7ee:	91 2c       	mov	r9, r1
 7f0:	53 01       	movw	r10, r6
 7f2:	12 c0       	rjmp	.+36     	; 0x818 <vfprintf+0x14e>
 7f4:	28 01       	movw	r4, r16
 7f6:	f2 e0       	ldi	r31, 0x02	; 2
 7f8:	4f 0e       	add	r4, r31
 7fa:	51 1c       	adc	r5, r1
 7fc:	f8 01       	movw	r30, r16
 7fe:	a0 80       	ld	r10, Z
 800:	b1 80       	ldd	r11, Z+1	; 0x01
 802:	36 fe       	sbrs	r3, 6
 804:	03 c0       	rjmp	.+6      	; 0x80c <vfprintf+0x142>
 806:	69 2d       	mov	r22, r9
 808:	70 e0       	ldi	r23, 0x00	; 0
 80a:	02 c0       	rjmp	.+4      	; 0x810 <vfprintf+0x146>
 80c:	6f ef       	ldi	r22, 0xFF	; 255
 80e:	7f ef       	ldi	r23, 0xFF	; 255
 810:	c5 01       	movw	r24, r10
 812:	38 d1       	rcall	.+624    	; 0xa84 <strnlen>
 814:	4c 01       	movw	r8, r24
 816:	82 01       	movw	r16, r4
 818:	f3 2d       	mov	r31, r3
 81a:	ff 77       	andi	r31, 0x7F	; 127
 81c:	3f 2e       	mov	r3, r31
 81e:	15 c0       	rjmp	.+42     	; 0x84a <vfprintf+0x180>
 820:	28 01       	movw	r4, r16
 822:	22 e0       	ldi	r18, 0x02	; 2
 824:	42 0e       	add	r4, r18
 826:	51 1c       	adc	r5, r1
 828:	f8 01       	movw	r30, r16
 82a:	a0 80       	ld	r10, Z
 82c:	b1 80       	ldd	r11, Z+1	; 0x01
 82e:	36 fe       	sbrs	r3, 6
 830:	03 c0       	rjmp	.+6      	; 0x838 <vfprintf+0x16e>
 832:	69 2d       	mov	r22, r9
 834:	70 e0       	ldi	r23, 0x00	; 0
 836:	02 c0       	rjmp	.+4      	; 0x83c <vfprintf+0x172>
 838:	6f ef       	ldi	r22, 0xFF	; 255
 83a:	7f ef       	ldi	r23, 0xFF	; 255
 83c:	c5 01       	movw	r24, r10
 83e:	17 d1       	rcall	.+558    	; 0xa6e <strnlen_P>
 840:	4c 01       	movw	r8, r24
 842:	f3 2d       	mov	r31, r3
 844:	f0 68       	ori	r31, 0x80	; 128
 846:	3f 2e       	mov	r3, r31
 848:	82 01       	movw	r16, r4
 84a:	33 fc       	sbrc	r3, 3
 84c:	19 c0       	rjmp	.+50     	; 0x880 <vfprintf+0x1b6>
 84e:	82 2d       	mov	r24, r2
 850:	90 e0       	ldi	r25, 0x00	; 0
 852:	88 16       	cp	r8, r24
 854:	99 06       	cpc	r9, r25
 856:	a0 f4       	brcc	.+40     	; 0x880 <vfprintf+0x1b6>
 858:	b6 01       	movw	r22, r12
 85a:	80 e2       	ldi	r24, 0x20	; 32
 85c:	90 e0       	ldi	r25, 0x00	; 0
 85e:	1d d1       	rcall	.+570    	; 0xa9a <fputc>
 860:	2a 94       	dec	r2
 862:	f5 cf       	rjmp	.-22     	; 0x84e <vfprintf+0x184>
 864:	f5 01       	movw	r30, r10
 866:	37 fc       	sbrc	r3, 7
 868:	85 91       	lpm	r24, Z+
 86a:	37 fe       	sbrs	r3, 7
 86c:	81 91       	ld	r24, Z+
 86e:	5f 01       	movw	r10, r30
 870:	b6 01       	movw	r22, r12
 872:	90 e0       	ldi	r25, 0x00	; 0
 874:	12 d1       	rcall	.+548    	; 0xa9a <fputc>
 876:	21 10       	cpse	r2, r1
 878:	2a 94       	dec	r2
 87a:	21 e0       	ldi	r18, 0x01	; 1
 87c:	82 1a       	sub	r8, r18
 87e:	91 08       	sbc	r9, r1
 880:	81 14       	cp	r8, r1
 882:	91 04       	cpc	r9, r1
 884:	79 f7       	brne	.-34     	; 0x864 <vfprintf+0x19a>
 886:	e1 c0       	rjmp	.+450    	; 0xa4a <vfprintf+0x380>
 888:	84 36       	cpi	r24, 0x64	; 100
 88a:	11 f0       	breq	.+4      	; 0x890 <vfprintf+0x1c6>
 88c:	89 36       	cpi	r24, 0x69	; 105
 88e:	39 f5       	brne	.+78     	; 0x8de <vfprintf+0x214>
 890:	f8 01       	movw	r30, r16
 892:	37 fe       	sbrs	r3, 7
 894:	07 c0       	rjmp	.+14     	; 0x8a4 <vfprintf+0x1da>
 896:	60 81       	ld	r22, Z
 898:	71 81       	ldd	r23, Z+1	; 0x01
 89a:	82 81       	ldd	r24, Z+2	; 0x02
 89c:	93 81       	ldd	r25, Z+3	; 0x03
 89e:	0c 5f       	subi	r16, 0xFC	; 252
 8a0:	1f 4f       	sbci	r17, 0xFF	; 255
 8a2:	08 c0       	rjmp	.+16     	; 0x8b4 <vfprintf+0x1ea>
 8a4:	60 81       	ld	r22, Z
 8a6:	71 81       	ldd	r23, Z+1	; 0x01
 8a8:	07 2e       	mov	r0, r23
 8aa:	00 0c       	add	r0, r0
 8ac:	88 0b       	sbc	r24, r24
 8ae:	99 0b       	sbc	r25, r25
 8b0:	0e 5f       	subi	r16, 0xFE	; 254
 8b2:	1f 4f       	sbci	r17, 0xFF	; 255
 8b4:	f3 2d       	mov	r31, r3
 8b6:	ff 76       	andi	r31, 0x6F	; 111
 8b8:	3f 2e       	mov	r3, r31
 8ba:	97 ff       	sbrs	r25, 7
 8bc:	09 c0       	rjmp	.+18     	; 0x8d0 <vfprintf+0x206>
 8be:	90 95       	com	r25
 8c0:	80 95       	com	r24
 8c2:	70 95       	com	r23
 8c4:	61 95       	neg	r22
 8c6:	7f 4f       	sbci	r23, 0xFF	; 255
 8c8:	8f 4f       	sbci	r24, 0xFF	; 255
 8ca:	9f 4f       	sbci	r25, 0xFF	; 255
 8cc:	f0 68       	ori	r31, 0x80	; 128
 8ce:	3f 2e       	mov	r3, r31
 8d0:	2a e0       	ldi	r18, 0x0A	; 10
 8d2:	30 e0       	ldi	r19, 0x00	; 0
 8d4:	a3 01       	movw	r20, r6
 8d6:	1d d1       	rcall	.+570    	; 0xb12 <__ultoa_invert>
 8d8:	88 2e       	mov	r8, r24
 8da:	86 18       	sub	r8, r6
 8dc:	44 c0       	rjmp	.+136    	; 0x966 <vfprintf+0x29c>
 8de:	85 37       	cpi	r24, 0x75	; 117
 8e0:	31 f4       	brne	.+12     	; 0x8ee <vfprintf+0x224>
 8e2:	23 2d       	mov	r18, r3
 8e4:	2f 7e       	andi	r18, 0xEF	; 239
 8e6:	b2 2e       	mov	r11, r18
 8e8:	2a e0       	ldi	r18, 0x0A	; 10
 8ea:	30 e0       	ldi	r19, 0x00	; 0
 8ec:	25 c0       	rjmp	.+74     	; 0x938 <vfprintf+0x26e>
 8ee:	93 2d       	mov	r25, r3
 8f0:	99 7f       	andi	r25, 0xF9	; 249
 8f2:	b9 2e       	mov	r11, r25
 8f4:	8f 36       	cpi	r24, 0x6F	; 111
 8f6:	c1 f0       	breq	.+48     	; 0x928 <vfprintf+0x25e>
 8f8:	18 f4       	brcc	.+6      	; 0x900 <vfprintf+0x236>
 8fa:	88 35       	cpi	r24, 0x58	; 88
 8fc:	79 f0       	breq	.+30     	; 0x91c <vfprintf+0x252>
 8fe:	ae c0       	rjmp	.+348    	; 0xa5c <vfprintf+0x392>
 900:	80 37       	cpi	r24, 0x70	; 112
 902:	19 f0       	breq	.+6      	; 0x90a <vfprintf+0x240>
 904:	88 37       	cpi	r24, 0x78	; 120
 906:	21 f0       	breq	.+8      	; 0x910 <vfprintf+0x246>
 908:	a9 c0       	rjmp	.+338    	; 0xa5c <vfprintf+0x392>
 90a:	e9 2f       	mov	r30, r25
 90c:	e0 61       	ori	r30, 0x10	; 16
 90e:	be 2e       	mov	r11, r30
 910:	b4 fe       	sbrs	r11, 4
 912:	0d c0       	rjmp	.+26     	; 0x92e <vfprintf+0x264>
 914:	fb 2d       	mov	r31, r11
 916:	f4 60       	ori	r31, 0x04	; 4
 918:	bf 2e       	mov	r11, r31
 91a:	09 c0       	rjmp	.+18     	; 0x92e <vfprintf+0x264>
 91c:	34 fe       	sbrs	r3, 4
 91e:	0a c0       	rjmp	.+20     	; 0x934 <vfprintf+0x26a>
 920:	29 2f       	mov	r18, r25
 922:	26 60       	ori	r18, 0x06	; 6
 924:	b2 2e       	mov	r11, r18
 926:	06 c0       	rjmp	.+12     	; 0x934 <vfprintf+0x26a>
 928:	28 e0       	ldi	r18, 0x08	; 8
 92a:	30 e0       	ldi	r19, 0x00	; 0
 92c:	05 c0       	rjmp	.+10     	; 0x938 <vfprintf+0x26e>
 92e:	20 e1       	ldi	r18, 0x10	; 16
 930:	30 e0       	ldi	r19, 0x00	; 0
 932:	02 c0       	rjmp	.+4      	; 0x938 <vfprintf+0x26e>
 934:	20 e1       	ldi	r18, 0x10	; 16
 936:	32 e0       	ldi	r19, 0x02	; 2
 938:	f8 01       	movw	r30, r16
 93a:	b7 fe       	sbrs	r11, 7
 93c:	07 c0       	rjmp	.+14     	; 0x94c <vfprintf+0x282>
 93e:	60 81       	ld	r22, Z
 940:	71 81       	ldd	r23, Z+1	; 0x01
 942:	82 81       	ldd	r24, Z+2	; 0x02
 944:	93 81       	ldd	r25, Z+3	; 0x03
 946:	0c 5f       	subi	r16, 0xFC	; 252
 948:	1f 4f       	sbci	r17, 0xFF	; 255
 94a:	06 c0       	rjmp	.+12     	; 0x958 <vfprintf+0x28e>
 94c:	60 81       	ld	r22, Z
 94e:	71 81       	ldd	r23, Z+1	; 0x01
 950:	80 e0       	ldi	r24, 0x00	; 0
 952:	90 e0       	ldi	r25, 0x00	; 0
 954:	0e 5f       	subi	r16, 0xFE	; 254
 956:	1f 4f       	sbci	r17, 0xFF	; 255
 958:	a3 01       	movw	r20, r6
 95a:	db d0       	rcall	.+438    	; 0xb12 <__ultoa_invert>
 95c:	88 2e       	mov	r8, r24
 95e:	86 18       	sub	r8, r6
 960:	fb 2d       	mov	r31, r11
 962:	ff 77       	andi	r31, 0x7F	; 127
 964:	3f 2e       	mov	r3, r31
 966:	36 fe       	sbrs	r3, 6
 968:	0d c0       	rjmp	.+26     	; 0x984 <vfprintf+0x2ba>
 96a:	23 2d       	mov	r18, r3
 96c:	2e 7f       	andi	r18, 0xFE	; 254
 96e:	a2 2e       	mov	r10, r18
 970:	89 14       	cp	r8, r9
 972:	58 f4       	brcc	.+22     	; 0x98a <vfprintf+0x2c0>
 974:	34 fe       	sbrs	r3, 4
 976:	0b c0       	rjmp	.+22     	; 0x98e <vfprintf+0x2c4>
 978:	32 fc       	sbrc	r3, 2
 97a:	09 c0       	rjmp	.+18     	; 0x98e <vfprintf+0x2c4>
 97c:	83 2d       	mov	r24, r3
 97e:	8e 7e       	andi	r24, 0xEE	; 238
 980:	a8 2e       	mov	r10, r24
 982:	05 c0       	rjmp	.+10     	; 0x98e <vfprintf+0x2c4>
 984:	b8 2c       	mov	r11, r8
 986:	a3 2c       	mov	r10, r3
 988:	03 c0       	rjmp	.+6      	; 0x990 <vfprintf+0x2c6>
 98a:	b8 2c       	mov	r11, r8
 98c:	01 c0       	rjmp	.+2      	; 0x990 <vfprintf+0x2c6>
 98e:	b9 2c       	mov	r11, r9
 990:	a4 fe       	sbrs	r10, 4
 992:	0f c0       	rjmp	.+30     	; 0x9b2 <vfprintf+0x2e8>
 994:	fe 01       	movw	r30, r28
 996:	e8 0d       	add	r30, r8
 998:	f1 1d       	adc	r31, r1
 99a:	80 81       	ld	r24, Z
 99c:	80 33       	cpi	r24, 0x30	; 48
 99e:	21 f4       	brne	.+8      	; 0x9a8 <vfprintf+0x2de>
 9a0:	9a 2d       	mov	r25, r10
 9a2:	99 7e       	andi	r25, 0xE9	; 233
 9a4:	a9 2e       	mov	r10, r25
 9a6:	09 c0       	rjmp	.+18     	; 0x9ba <vfprintf+0x2f0>
 9a8:	a2 fe       	sbrs	r10, 2
 9aa:	06 c0       	rjmp	.+12     	; 0x9b8 <vfprintf+0x2ee>
 9ac:	b3 94       	inc	r11
 9ae:	b3 94       	inc	r11
 9b0:	04 c0       	rjmp	.+8      	; 0x9ba <vfprintf+0x2f0>
 9b2:	8a 2d       	mov	r24, r10
 9b4:	86 78       	andi	r24, 0x86	; 134
 9b6:	09 f0       	breq	.+2      	; 0x9ba <vfprintf+0x2f0>
 9b8:	b3 94       	inc	r11
 9ba:	a3 fc       	sbrc	r10, 3
 9bc:	10 c0       	rjmp	.+32     	; 0x9de <vfprintf+0x314>
 9be:	a0 fe       	sbrs	r10, 0
 9c0:	06 c0       	rjmp	.+12     	; 0x9ce <vfprintf+0x304>
 9c2:	b2 14       	cp	r11, r2
 9c4:	80 f4       	brcc	.+32     	; 0x9e6 <vfprintf+0x31c>
 9c6:	28 0c       	add	r2, r8
 9c8:	92 2c       	mov	r9, r2
 9ca:	9b 18       	sub	r9, r11
 9cc:	0d c0       	rjmp	.+26     	; 0x9e8 <vfprintf+0x31e>
 9ce:	b2 14       	cp	r11, r2
 9d0:	58 f4       	brcc	.+22     	; 0x9e8 <vfprintf+0x31e>
 9d2:	b6 01       	movw	r22, r12
 9d4:	80 e2       	ldi	r24, 0x20	; 32
 9d6:	90 e0       	ldi	r25, 0x00	; 0
 9d8:	60 d0       	rcall	.+192    	; 0xa9a <fputc>
 9da:	b3 94       	inc	r11
 9dc:	f8 cf       	rjmp	.-16     	; 0x9ce <vfprintf+0x304>
 9de:	b2 14       	cp	r11, r2
 9e0:	18 f4       	brcc	.+6      	; 0x9e8 <vfprintf+0x31e>
 9e2:	2b 18       	sub	r2, r11
 9e4:	02 c0       	rjmp	.+4      	; 0x9ea <vfprintf+0x320>
 9e6:	98 2c       	mov	r9, r8
 9e8:	21 2c       	mov	r2, r1
 9ea:	a4 fe       	sbrs	r10, 4
 9ec:	0f c0       	rjmp	.+30     	; 0xa0c <vfprintf+0x342>
 9ee:	b6 01       	movw	r22, r12
 9f0:	80 e3       	ldi	r24, 0x30	; 48
 9f2:	90 e0       	ldi	r25, 0x00	; 0
 9f4:	52 d0       	rcall	.+164    	; 0xa9a <fputc>
 9f6:	a2 fe       	sbrs	r10, 2
 9f8:	16 c0       	rjmp	.+44     	; 0xa26 <vfprintf+0x35c>
 9fa:	a1 fc       	sbrc	r10, 1
 9fc:	03 c0       	rjmp	.+6      	; 0xa04 <vfprintf+0x33a>
 9fe:	88 e7       	ldi	r24, 0x78	; 120
 a00:	90 e0       	ldi	r25, 0x00	; 0
 a02:	02 c0       	rjmp	.+4      	; 0xa08 <vfprintf+0x33e>
 a04:	88 e5       	ldi	r24, 0x58	; 88
 a06:	90 e0       	ldi	r25, 0x00	; 0
 a08:	b6 01       	movw	r22, r12
 a0a:	0c c0       	rjmp	.+24     	; 0xa24 <vfprintf+0x35a>
 a0c:	8a 2d       	mov	r24, r10
 a0e:	86 78       	andi	r24, 0x86	; 134
 a10:	51 f0       	breq	.+20     	; 0xa26 <vfprintf+0x35c>
 a12:	a1 fe       	sbrs	r10, 1
 a14:	02 c0       	rjmp	.+4      	; 0xa1a <vfprintf+0x350>
 a16:	8b e2       	ldi	r24, 0x2B	; 43
 a18:	01 c0       	rjmp	.+2      	; 0xa1c <vfprintf+0x352>
 a1a:	80 e2       	ldi	r24, 0x20	; 32
 a1c:	a7 fc       	sbrc	r10, 7
 a1e:	8d e2       	ldi	r24, 0x2D	; 45
 a20:	b6 01       	movw	r22, r12
 a22:	90 e0       	ldi	r25, 0x00	; 0
 a24:	3a d0       	rcall	.+116    	; 0xa9a <fputc>
 a26:	89 14       	cp	r8, r9
 a28:	30 f4       	brcc	.+12     	; 0xa36 <vfprintf+0x36c>
 a2a:	b6 01       	movw	r22, r12
 a2c:	80 e3       	ldi	r24, 0x30	; 48
 a2e:	90 e0       	ldi	r25, 0x00	; 0
 a30:	34 d0       	rcall	.+104    	; 0xa9a <fputc>
 a32:	9a 94       	dec	r9
 a34:	f8 cf       	rjmp	.-16     	; 0xa26 <vfprintf+0x35c>
 a36:	8a 94       	dec	r8
 a38:	f3 01       	movw	r30, r6
 a3a:	e8 0d       	add	r30, r8
 a3c:	f1 1d       	adc	r31, r1
 a3e:	80 81       	ld	r24, Z
 a40:	b6 01       	movw	r22, r12
 a42:	90 e0       	ldi	r25, 0x00	; 0
 a44:	2a d0       	rcall	.+84     	; 0xa9a <fputc>
 a46:	81 10       	cpse	r8, r1
 a48:	f6 cf       	rjmp	.-20     	; 0xa36 <vfprintf+0x36c>
 a4a:	22 20       	and	r2, r2
 a4c:	09 f4       	brne	.+2      	; 0xa50 <vfprintf+0x386>
 a4e:	4e ce       	rjmp	.-868    	; 0x6ec <vfprintf+0x22>
 a50:	b6 01       	movw	r22, r12
 a52:	80 e2       	ldi	r24, 0x20	; 32
 a54:	90 e0       	ldi	r25, 0x00	; 0
 a56:	21 d0       	rcall	.+66     	; 0xa9a <fputc>
 a58:	2a 94       	dec	r2
 a5a:	f7 cf       	rjmp	.-18     	; 0xa4a <vfprintf+0x380>
 a5c:	f6 01       	movw	r30, r12
 a5e:	86 81       	ldd	r24, Z+6	; 0x06
 a60:	97 81       	ldd	r25, Z+7	; 0x07
 a62:	02 c0       	rjmp	.+4      	; 0xa68 <vfprintf+0x39e>
 a64:	8f ef       	ldi	r24, 0xFF	; 255
 a66:	9f ef       	ldi	r25, 0xFF	; 255
 a68:	2b 96       	adiw	r28, 0x0b	; 11
 a6a:	e2 e1       	ldi	r30, 0x12	; 18
 a6c:	cc c0       	rjmp	.+408    	; 0xc06 <__epilogue_restores__>

00000a6e <strnlen_P>:
 a6e:	fc 01       	movw	r30, r24
 a70:	05 90       	lpm	r0, Z+
 a72:	61 50       	subi	r22, 0x01	; 1
 a74:	70 40       	sbci	r23, 0x00	; 0
 a76:	01 10       	cpse	r0, r1
 a78:	d8 f7       	brcc	.-10     	; 0xa70 <strnlen_P+0x2>
 a7a:	80 95       	com	r24
 a7c:	90 95       	com	r25
 a7e:	8e 0f       	add	r24, r30
 a80:	9f 1f       	adc	r25, r31
 a82:	08 95       	ret

00000a84 <strnlen>:
 a84:	fc 01       	movw	r30, r24
 a86:	61 50       	subi	r22, 0x01	; 1
 a88:	70 40       	sbci	r23, 0x00	; 0
 a8a:	01 90       	ld	r0, Z+
 a8c:	01 10       	cpse	r0, r1
 a8e:	d8 f7       	brcc	.-10     	; 0xa86 <strnlen+0x2>
 a90:	80 95       	com	r24
 a92:	90 95       	com	r25
 a94:	8e 0f       	add	r24, r30
 a96:	9f 1f       	adc	r25, r31
 a98:	08 95       	ret

00000a9a <fputc>:
 a9a:	0f 93       	push	r16
 a9c:	1f 93       	push	r17
 a9e:	cf 93       	push	r28
 aa0:	df 93       	push	r29
 aa2:	fb 01       	movw	r30, r22
 aa4:	23 81       	ldd	r18, Z+3	; 0x03
 aa6:	21 fd       	sbrc	r18, 1
 aa8:	03 c0       	rjmp	.+6      	; 0xab0 <fputc+0x16>
 aaa:	8f ef       	ldi	r24, 0xFF	; 255
 aac:	9f ef       	ldi	r25, 0xFF	; 255
 aae:	2c c0       	rjmp	.+88     	; 0xb08 <fputc+0x6e>
 ab0:	22 ff       	sbrs	r18, 2
 ab2:	16 c0       	rjmp	.+44     	; 0xae0 <fputc+0x46>
 ab4:	46 81       	ldd	r20, Z+6	; 0x06
 ab6:	57 81       	ldd	r21, Z+7	; 0x07
 ab8:	24 81       	ldd	r18, Z+4	; 0x04
 aba:	35 81       	ldd	r19, Z+5	; 0x05
 abc:	42 17       	cp	r20, r18
 abe:	53 07       	cpc	r21, r19
 ac0:	44 f4       	brge	.+16     	; 0xad2 <fputc+0x38>
 ac2:	a0 81       	ld	r26, Z
 ac4:	b1 81       	ldd	r27, Z+1	; 0x01
 ac6:	9d 01       	movw	r18, r26
 ac8:	2f 5f       	subi	r18, 0xFF	; 255
 aca:	3f 4f       	sbci	r19, 0xFF	; 255
 acc:	31 83       	std	Z+1, r19	; 0x01
 ace:	20 83       	st	Z, r18
 ad0:	8c 93       	st	X, r24
 ad2:	26 81       	ldd	r18, Z+6	; 0x06
 ad4:	37 81       	ldd	r19, Z+7	; 0x07
 ad6:	2f 5f       	subi	r18, 0xFF	; 255
 ad8:	3f 4f       	sbci	r19, 0xFF	; 255
 ada:	37 83       	std	Z+7, r19	; 0x07
 adc:	26 83       	std	Z+6, r18	; 0x06
 ade:	14 c0       	rjmp	.+40     	; 0xb08 <fputc+0x6e>
 ae0:	8b 01       	movw	r16, r22
 ae2:	ec 01       	movw	r28, r24
 ae4:	fb 01       	movw	r30, r22
 ae6:	00 84       	ldd	r0, Z+8	; 0x08
 ae8:	f1 85       	ldd	r31, Z+9	; 0x09
 aea:	e0 2d       	mov	r30, r0
 aec:	09 95       	icall
 aee:	89 2b       	or	r24, r25
 af0:	e1 f6       	brne	.-72     	; 0xaaa <fputc+0x10>
 af2:	d8 01       	movw	r26, r16
 af4:	16 96       	adiw	r26, 0x06	; 6
 af6:	8d 91       	ld	r24, X+
 af8:	9c 91       	ld	r25, X
 afa:	17 97       	sbiw	r26, 0x07	; 7
 afc:	01 96       	adiw	r24, 0x01	; 1
 afe:	17 96       	adiw	r26, 0x07	; 7
 b00:	9c 93       	st	X, r25
 b02:	8e 93       	st	-X, r24
 b04:	16 97       	sbiw	r26, 0x06	; 6
 b06:	ce 01       	movw	r24, r28
 b08:	df 91       	pop	r29
 b0a:	cf 91       	pop	r28
 b0c:	1f 91       	pop	r17
 b0e:	0f 91       	pop	r16
 b10:	08 95       	ret

00000b12 <__ultoa_invert>:
 b12:	fa 01       	movw	r30, r20
 b14:	aa 27       	eor	r26, r26
 b16:	28 30       	cpi	r18, 0x08	; 8
 b18:	51 f1       	breq	.+84     	; 0xb6e <__ultoa_invert+0x5c>
 b1a:	20 31       	cpi	r18, 0x10	; 16
 b1c:	81 f1       	breq	.+96     	; 0xb7e <__ultoa_invert+0x6c>
 b1e:	e8 94       	clt
 b20:	6f 93       	push	r22
 b22:	6e 7f       	andi	r22, 0xFE	; 254
 b24:	6e 5f       	subi	r22, 0xFE	; 254
 b26:	7f 4f       	sbci	r23, 0xFF	; 255
 b28:	8f 4f       	sbci	r24, 0xFF	; 255
 b2a:	9f 4f       	sbci	r25, 0xFF	; 255
 b2c:	af 4f       	sbci	r26, 0xFF	; 255
 b2e:	b1 e0       	ldi	r27, 0x01	; 1
 b30:	3e d0       	rcall	.+124    	; 0xbae <__ultoa_invert+0x9c>
 b32:	b4 e0       	ldi	r27, 0x04	; 4
 b34:	3c d0       	rcall	.+120    	; 0xbae <__ultoa_invert+0x9c>
 b36:	67 0f       	add	r22, r23
 b38:	78 1f       	adc	r23, r24
 b3a:	89 1f       	adc	r24, r25
 b3c:	9a 1f       	adc	r25, r26
 b3e:	a1 1d       	adc	r26, r1
 b40:	68 0f       	add	r22, r24
 b42:	79 1f       	adc	r23, r25
 b44:	8a 1f       	adc	r24, r26
 b46:	91 1d       	adc	r25, r1
 b48:	a1 1d       	adc	r26, r1
 b4a:	6a 0f       	add	r22, r26
 b4c:	71 1d       	adc	r23, r1
 b4e:	81 1d       	adc	r24, r1
 b50:	91 1d       	adc	r25, r1
 b52:	a1 1d       	adc	r26, r1
 b54:	20 d0       	rcall	.+64     	; 0xb96 <__ultoa_invert+0x84>
 b56:	09 f4       	brne	.+2      	; 0xb5a <__ultoa_invert+0x48>
 b58:	68 94       	set
 b5a:	3f 91       	pop	r19
 b5c:	2a e0       	ldi	r18, 0x0A	; 10
 b5e:	26 9f       	mul	r18, r22
 b60:	11 24       	eor	r1, r1
 b62:	30 19       	sub	r19, r0
 b64:	30 5d       	subi	r19, 0xD0	; 208
 b66:	31 93       	st	Z+, r19
 b68:	de f6       	brtc	.-74     	; 0xb20 <__ultoa_invert+0xe>
 b6a:	cf 01       	movw	r24, r30
 b6c:	08 95       	ret
 b6e:	46 2f       	mov	r20, r22
 b70:	47 70       	andi	r20, 0x07	; 7
 b72:	40 5d       	subi	r20, 0xD0	; 208
 b74:	41 93       	st	Z+, r20
 b76:	b3 e0       	ldi	r27, 0x03	; 3
 b78:	0f d0       	rcall	.+30     	; 0xb98 <__ultoa_invert+0x86>
 b7a:	c9 f7       	brne	.-14     	; 0xb6e <__ultoa_invert+0x5c>
 b7c:	f6 cf       	rjmp	.-20     	; 0xb6a <__ultoa_invert+0x58>
 b7e:	46 2f       	mov	r20, r22
 b80:	4f 70       	andi	r20, 0x0F	; 15
 b82:	40 5d       	subi	r20, 0xD0	; 208
 b84:	4a 33       	cpi	r20, 0x3A	; 58
 b86:	18 f0       	brcs	.+6      	; 0xb8e <__ultoa_invert+0x7c>
 b88:	49 5d       	subi	r20, 0xD9	; 217
 b8a:	31 fd       	sbrc	r19, 1
 b8c:	40 52       	subi	r20, 0x20	; 32
 b8e:	41 93       	st	Z+, r20
 b90:	02 d0       	rcall	.+4      	; 0xb96 <__ultoa_invert+0x84>
 b92:	a9 f7       	brne	.-22     	; 0xb7e <__ultoa_invert+0x6c>
 b94:	ea cf       	rjmp	.-44     	; 0xb6a <__ultoa_invert+0x58>
 b96:	b4 e0       	ldi	r27, 0x04	; 4
 b98:	a6 95       	lsr	r26
 b9a:	97 95       	ror	r25
 b9c:	87 95       	ror	r24
 b9e:	77 95       	ror	r23
 ba0:	67 95       	ror	r22
 ba2:	ba 95       	dec	r27
 ba4:	c9 f7       	brne	.-14     	; 0xb98 <__ultoa_invert+0x86>
 ba6:	00 97       	sbiw	r24, 0x00	; 0
 ba8:	61 05       	cpc	r22, r1
 baa:	71 05       	cpc	r23, r1
 bac:	08 95       	ret
 bae:	9b 01       	movw	r18, r22
 bb0:	ac 01       	movw	r20, r24
 bb2:	0a 2e       	mov	r0, r26
 bb4:	06 94       	lsr	r0
 bb6:	57 95       	ror	r21
 bb8:	47 95       	ror	r20
 bba:	37 95       	ror	r19
 bbc:	27 95       	ror	r18
 bbe:	ba 95       	dec	r27
 bc0:	c9 f7       	brne	.-14     	; 0xbb4 <__ultoa_invert+0xa2>
 bc2:	62 0f       	add	r22, r18
 bc4:	73 1f       	adc	r23, r19
 bc6:	84 1f       	adc	r24, r20
 bc8:	95 1f       	adc	r25, r21
 bca:	a0 1d       	adc	r26, r0
 bcc:	08 95       	ret

00000bce <__prologue_saves__>:
 bce:	2f 92       	push	r2
 bd0:	3f 92       	push	r3
 bd2:	4f 92       	push	r4
 bd4:	5f 92       	push	r5
 bd6:	6f 92       	push	r6
 bd8:	7f 92       	push	r7
 bda:	8f 92       	push	r8
 bdc:	9f 92       	push	r9
 bde:	af 92       	push	r10
 be0:	bf 92       	push	r11
 be2:	cf 92       	push	r12
 be4:	df 92       	push	r13
 be6:	ef 92       	push	r14
 be8:	ff 92       	push	r15
 bea:	0f 93       	push	r16
 bec:	1f 93       	push	r17
 bee:	cf 93       	push	r28
 bf0:	df 93       	push	r29
 bf2:	cd b7       	in	r28, 0x3d	; 61
 bf4:	de b7       	in	r29, 0x3e	; 62
 bf6:	ca 1b       	sub	r28, r26
 bf8:	db 0b       	sbc	r29, r27
 bfa:	0f b6       	in	r0, 0x3f	; 63
 bfc:	f8 94       	cli
 bfe:	de bf       	out	0x3e, r29	; 62
 c00:	0f be       	out	0x3f, r0	; 63
 c02:	cd bf       	out	0x3d, r28	; 61
 c04:	09 94       	ijmp

00000c06 <__epilogue_restores__>:
 c06:	2a 88       	ldd	r2, Y+18	; 0x12
 c08:	39 88       	ldd	r3, Y+17	; 0x11
 c0a:	48 88       	ldd	r4, Y+16	; 0x10
 c0c:	5f 84       	ldd	r5, Y+15	; 0x0f
 c0e:	6e 84       	ldd	r6, Y+14	; 0x0e
 c10:	7d 84       	ldd	r7, Y+13	; 0x0d
 c12:	8c 84       	ldd	r8, Y+12	; 0x0c
 c14:	9b 84       	ldd	r9, Y+11	; 0x0b
 c16:	aa 84       	ldd	r10, Y+10	; 0x0a
 c18:	b9 84       	ldd	r11, Y+9	; 0x09
 c1a:	c8 84       	ldd	r12, Y+8	; 0x08
 c1c:	df 80       	ldd	r13, Y+7	; 0x07
 c1e:	ee 80       	ldd	r14, Y+6	; 0x06
 c20:	fd 80       	ldd	r15, Y+5	; 0x05
 c22:	0c 81       	ldd	r16, Y+4	; 0x04
 c24:	1b 81       	ldd	r17, Y+3	; 0x03
 c26:	aa 81       	ldd	r26, Y+2	; 0x02
 c28:	b9 81       	ldd	r27, Y+1	; 0x01
 c2a:	ce 0f       	add	r28, r30
 c2c:	d1 1d       	adc	r29, r1
 c2e:	0f b6       	in	r0, 0x3f	; 63
 c30:	f8 94       	cli
 c32:	de bf       	out	0x3e, r29	; 62
 c34:	0f be       	out	0x3f, r0	; 63
 c36:	cd bf       	out	0x3d, r28	; 61
 c38:	ed 01       	movw	r28, r26
 c3a:	08 95       	ret

00000c3c <_exit>:
 c3c:	f8 94       	cli

00000c3e <__stop_program>:
 c3e:	ff cf       	rjmp	.-2      	; 0xc3e <__stop_program>

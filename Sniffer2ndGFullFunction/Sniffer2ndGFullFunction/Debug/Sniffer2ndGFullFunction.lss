
Sniffer2ndGFullFunction.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a8e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  00000a8e  00000b22  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000d  0080006c  0080006c  00000b2e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b2e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b60  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000b9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007ad  00000000  00000000  00000bdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005e3  00000000  00000000  00001389  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000430  00000000  00000000  0000196c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c4  00000000  00000000  00001d9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000040b  00000000  00000000  00001e60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000339  00000000  00000000  0000226b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  000025a4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	53 c0       	rjmp	.+166    	; 0xa8 <__ctors_end>
   2:	6d c0       	rjmp	.+218    	; 0xde <__bad_interrupt>
   4:	6c c0       	rjmp	.+216    	; 0xde <__bad_interrupt>
   6:	6b c0       	rjmp	.+214    	; 0xde <__bad_interrupt>
   8:	6a c0       	rjmp	.+212    	; 0xde <__bad_interrupt>
   a:	69 c0       	rjmp	.+210    	; 0xde <__bad_interrupt>
   c:	88 c0       	rjmp	.+272    	; 0x11e <__vector_6>
   e:	67 c0       	rjmp	.+206    	; 0xde <__bad_interrupt>
  10:	66 c0       	rjmp	.+204    	; 0xde <__bad_interrupt>
  12:	65 c0       	rjmp	.+202    	; 0xde <__bad_interrupt>
  14:	64 c0       	rjmp	.+200    	; 0xde <__bad_interrupt>
  16:	63 c0       	rjmp	.+198    	; 0xde <__bad_interrupt>
  18:	62 c0       	rjmp	.+196    	; 0xde <__bad_interrupt>
  1a:	61 c0       	rjmp	.+194    	; 0xde <__bad_interrupt>
  1c:	55 c1       	rjmp	.+682    	; 0x2c8 <__vector_14>
  1e:	5f c0       	rjmp	.+190    	; 0xde <__bad_interrupt>
  20:	5e c0       	rjmp	.+188    	; 0xde <__bad_interrupt>
  22:	5d c0       	rjmp	.+186    	; 0xde <__bad_interrupt>
  24:	5c c0       	rjmp	.+184    	; 0xde <__bad_interrupt>
  26:	08 00       	.word	0x0008	; ????
  28:	00 00       	nop
  2a:	be 92       	st	-X, r11
  2c:	24 49       	sbci	r18, 0x94	; 148
  2e:	12 3e       	cpi	r17, 0xE2	; 226
  30:	ab aa       	std	Y+51, r10	; 0x33
  32:	aa 2a       	or	r10, r26
  34:	be cd       	rjmp	.-1156   	; 0xfffffbb2 <__eeprom_end+0xff7efbb2>
  36:	cc cc       	rjmp	.-1640   	; 0xfffff9d0 <__eeprom_end+0xff7ef9d0>
  38:	4c 3e       	cpi	r20, 0xEC	; 236
  3a:	00 00       	nop
  3c:	00 80       	ld	r0, Z
  3e:	be ab       	std	Y+54, r27	; 0x36
  40:	aa aa       	std	Y+50, r10	; 0x32
  42:	aa 3e       	cpi	r26, 0xEA	; 234
  44:	00 00       	nop
  46:	00 00       	nop
  48:	bf 00       	.word	0x00bf	; ????
  4a:	00 00       	nop
  4c:	80 3f       	cpi	r24, 0xF0	; 240
  4e:	00 00       	nop
  50:	00 00       	nop
  52:	00 08       	sbc	r0, r0
  54:	41 78       	andi	r20, 0x81	; 129
  56:	d3 bb       	out	0x13, r29	; 19
  58:	43 87       	std	Z+11, r20	; 0x0b
  5a:	d1 13       	cpse	r29, r17
  5c:	3d 19       	sub	r19, r13
  5e:	0e 3c       	cpi	r16, 0xCE	; 206
  60:	c3 bd       	out	0x23, r28	; 35
  62:	42 82       	std	Z+2, r4	; 0x02
  64:	ad 2b       	or	r26, r29
  66:	3e 68       	ori	r19, 0x8E	; 142
  68:	ec 82       	std	Y+4, r14	; 0x04
  6a:	76 be       	out	0x36, r7	; 54
  6c:	d9 8f       	std	Y+25, r29	; 0x19
  6e:	e1 a9       	ldd	r30, Z+49	; 0x31
  70:	3e 4c       	sbci	r19, 0xCE	; 206
  72:	80 ef       	ldi	r24, 0xF0	; 240
  74:	ff be       	out	0x3f, r15	; 63
  76:	01 c4       	rjmp	.+2050   	; 0x87a <exp+0x1a>
  78:	ff 7f       	andi	r31, 0xFF	; 255
  7a:	3f 00       	.word	0x003f	; ????
  7c:	00 00       	nop
  7e:	00 00       	nop
  80:	07 63       	ori	r16, 0x37	; 55
  82:	42 36       	cpi	r20, 0x62	; 98
  84:	b7 9b       	sbis	0x16, 7	; 22
  86:	d8 a7       	std	Y+40, r29	; 0x28
  88:	1a 39       	cpi	r17, 0x9A	; 154
  8a:	68 56       	subi	r22, 0x68	; 104
  8c:	18 ae       	std	Y+56, r1	; 0x38
  8e:	ba ab       	std	Y+50, r27	; 0x32
  90:	55 8c       	ldd	r5, Z+29	; 0x1d
  92:	1d 3c       	cpi	r17, 0xCD	; 205
  94:	b7 cc       	rjmp	.-1682   	; 0xfffffa04 <__eeprom_end+0xff7efa04>
  96:	57 63       	ori	r21, 0x37	; 55
  98:	bd 6d       	ori	r27, 0xDD	; 221
  9a:	ed fd       	.word	0xfded	; ????
  9c:	75 3e       	cpi	r23, 0xE5	; 229
  9e:	f6 17       	cp	r31, r22
  a0:	72 31       	cpi	r23, 0x12	; 18
  a2:	bf 00       	.word	0x00bf	; ????
  a4:	00 00       	nop
  a6:	80 3f       	cpi	r24, 0xF0	; 240

000000a8 <__ctors_end>:
  a8:	11 24       	eor	r1, r1
  aa:	1f be       	out	0x3f, r1	; 63
  ac:	cf e5       	ldi	r28, 0x5F	; 95
  ae:	d4 e0       	ldi	r29, 0x04	; 4
  b0:	de bf       	out	0x3e, r29	; 62
  b2:	cd bf       	out	0x3d, r28	; 61

000000b4 <__do_copy_data>:
  b4:	10 e0       	ldi	r17, 0x00	; 0
  b6:	a0 e6       	ldi	r26, 0x60	; 96
  b8:	b0 e0       	ldi	r27, 0x00	; 0
  ba:	ee e8       	ldi	r30, 0x8E	; 142
  bc:	fa e0       	ldi	r31, 0x0A	; 10
  be:	02 c0       	rjmp	.+4      	; 0xc4 <__do_copy_data+0x10>
  c0:	05 90       	lpm	r0, Z+
  c2:	0d 92       	st	X+, r0
  c4:	ac 36       	cpi	r26, 0x6C	; 108
  c6:	b1 07       	cpc	r27, r17
  c8:	d9 f7       	brne	.-10     	; 0xc0 <__do_copy_data+0xc>

000000ca <__do_clear_bss>:
  ca:	20 e0       	ldi	r18, 0x00	; 0
  cc:	ac e6       	ldi	r26, 0x6C	; 108
  ce:	b0 e0       	ldi	r27, 0x00	; 0
  d0:	01 c0       	rjmp	.+2      	; 0xd4 <.do_clear_bss_start>

000000d2 <.do_clear_bss_loop>:
  d2:	1d 92       	st	X+, r1

000000d4 <.do_clear_bss_start>:
  d4:	a9 37       	cpi	r26, 0x79	; 121
  d6:	b2 07       	cpc	r27, r18
  d8:	e1 f7       	brne	.-8      	; 0xd2 <.do_clear_bss_loop>
  da:	34 d0       	rcall	.+104    	; 0x144 <main>
  dc:	d6 c4       	rjmp	.+2476   	; 0xa8a <_exit>

000000de <__bad_interrupt>:
  de:	90 cf       	rjmp	.-224    	; 0x0 <__vectors>

000000e0 <adc_init>:
float m = -0.382, b = 1.168; //for methane 

void adc_init()
{
	
	ADMUX = 0x00 ;          //adc channel 0
  e0:	17 b8       	out	0x07, r1	; 7
	ADCSRA |= (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0); // pre scaling by 128
  e2:	86 b1       	in	r24, 0x06	; 6
  e4:	87 68       	ori	r24, 0x87	; 135
  e6:	86 b9       	out	0x06, r24	; 6
	ADMUX |= (1<<REFS0);                     // AVCC as reference votage
  e8:	3e 9a       	sbi	0x07, 6	; 7
	ADMUX &= ~(1 << ADLAR);   // clear for 10 bit resolution
  ea:	3d 98       	cbi	0x07, 5	; 7
	ADCSRA |= 1<<ADIE;          // enable interrupt
  ec:	33 9a       	sbi	0x06, 3	; 6
	MCUCR |= 1<<SM0;             //Sleep mode     //Noise canceling mode
  ee:	85 b7       	in	r24, 0x35	; 53
  f0:	80 61       	ori	r24, 0x10	; 16
  f2:	85 bf       	out	0x35, r24	; 53
	MCUCR |= 1<<SE;              //sleep enable
  f4:	85 b7       	in	r24, 0x35	; 53
  f6:	80 68       	ori	r24, 0x80	; 128
  f8:	85 bf       	out	0x35, r24	; 53
	sei();
  fa:	78 94       	sei
	ADCSRA |= 1<<ADSC;
  fc:	36 9a       	sbi	0x06, 6	; 6
  fe:	08 95       	ret

00000100 <timer1_init>:
}


void timer1_init()
{
	OCR1A = 15624;     //1 second compare
 100:	88 e0       	ldi	r24, 0x08	; 8
 102:	9d e3       	ldi	r25, 0x3D	; 61
 104:	9b bd       	out	0x2b, r25	; 43
 106:	8a bd       	out	0x2a, r24	; 42
	TCCR1B |= (1 << WGM12);    // Mode 4, CTC on OCR1A
 108:	8e b5       	in	r24, 0x2e	; 46
 10a:	88 60       	ori	r24, 0x08	; 8
 10c:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= (1 << OCIE1A);    //Set interrupt on compare match
 10e:	89 b7       	in	r24, 0x39	; 57
 110:	80 61       	ori	r24, 0x10	; 16
 112:	89 bf       	out	0x39, r24	; 57
	TCCR1B |= (1 << CS12) | (1 << CS10);  // set prescaler to 1024 and start the timer
 114:	8e b5       	in	r24, 0x2e	; 46
 116:	85 60       	ori	r24, 0x05	; 5
 118:	8e bd       	out	0x2e, r24	; 46
	sei();             // enable interrupts
 11a:	78 94       	sei
 11c:	08 95       	ret

0000011e <__vector_6>:
	
}

ISR (TIMER1_COMPA_vect)
{
 11e:	1f 92       	push	r1
 120:	0f 92       	push	r0
 122:	0f b6       	in	r0, 0x3f	; 63
 124:	0f 92       	push	r0
 126:	11 24       	eor	r1, r1
 128:	8f 93       	push	r24
	// action to be done every 10ms
	PPMcalFlag = 1;
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <PPMcalFlag>
	buzzerFlag = 1;
 130:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <buzzerFlag>
	timeFlag = 1;
 134:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <timeFlag>
}
 138:	8f 91       	pop	r24
 13a:	0f 90       	pop	r0
 13c:	0f be       	out	0x3f, r0	; 63
 13e:	0f 90       	pop	r0
 140:	1f 90       	pop	r1
 142:	18 95       	reti

00000144 <main>:


int main(void)
{
	adc_init();
 144:	cd df       	rcall	.-102    	; 0xe0 <adc_init>
	timer1_init();
 146:	dc df       	rcall	.-72     	; 0x100 <timer1_init>
	
	DDRD |= (1 << Buzzer_PIN);
 148:	8f 9a       	sbi	0x11, 7	; 17
	DDRB |= (1 << WhiteLED_PIN);
 14a:	bc 9a       	sbi	0x17, 4	; 23
	DDRB |= (1 << GreenLED_PIN);
 14c:	b9 9a       	sbi	0x17, 1	; 23
	DDRB |= (1 << REDLED_PIN);
 14e:	bb 9a       	sbi	0x17, 3	; 23
	DDRB |= (1 << BlueLED_PIN);
 150:	bd 9a       	sbi	0x17, 5	; 23
	DDRD &= ~(1<<AdapterInput_PIN);//Makes firs pin of PORTD as Input
 152:	8e 98       	cbi	0x11, 6	; 17
	PORTB = 0x00;
 154:	18 ba       	out	0x18, r1	; 24
	PORTD = 0x00;
 156:	12 ba       	out	0x12, r1	; 18
	while(timeCounter <= 60)
	{
		if (timeFlag == 1)
		{
			timeCounter++;
			PORTB ^= 1 <<GreenLED_PIN;
 158:	22 e0       	ldi	r18, 0x02	; 2
	DDRB |= (1 << BlueLED_PIN);
	DDRD &= ~(1<<AdapterInput_PIN);//Makes firs pin of PORTD as Input
	PORTB = 0x00;
	PORTD = 0x00;
	
	while(timeCounter <= 60)
 15a:	0e c0       	rjmp	.+28     	; 0x178 <main+0x34>
	{
		if (timeFlag == 1)
 15c:	30 91 6e 00 	lds	r19, 0x006E	; 0x80006e <timeFlag>
 160:	31 30       	cpi	r19, 0x01	; 1
 162:	71 f4       	brne	.+28     	; 0x180 <main+0x3c>
		{
			timeCounter++;
 164:	01 96       	adiw	r24, 0x01	; 1
 166:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <__data_end+0x1>
 16a:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__data_end>
			PORTB ^= 1 <<GreenLED_PIN;
 16e:	88 b3       	in	r24, 0x18	; 24
 170:	82 27       	eor	r24, r18
 172:	88 bb       	out	0x18, r24	; 24
			timeFlag = 0;
 174:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <timeFlag>
	DDRB |= (1 << BlueLED_PIN);
	DDRD &= ~(1<<AdapterInput_PIN);//Makes firs pin of PORTD as Input
	PORTB = 0x00;
	PORTD = 0x00;
	
	while(timeCounter <= 60)
 178:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <__data_end>
 17c:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__data_end+0x1>
 180:	8d 33       	cpi	r24, 0x3D	; 61
 182:	91 05       	cpc	r25, r1
 184:	58 f3       	brcs	.-42     	; 0x15c <main+0x18>
			timeCounter++;
			PORTB ^= 1 <<GreenLED_PIN;
			timeFlag = 0;
		}
	}
	PORTD ^= 1 << Buzzer_PIN;
 186:	82 b3       	in	r24, 0x12	; 18
 188:	80 58       	subi	r24, 0x80	; 128
 18a:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 18c:	2f ef       	ldi	r18, 0xFF	; 255
 18e:	85 ea       	ldi	r24, 0xA5	; 165
 190:	9e e0       	ldi	r25, 0x0E	; 14
 192:	21 50       	subi	r18, 0x01	; 1
 194:	80 40       	sbci	r24, 0x00	; 0
 196:	90 40       	sbci	r25, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <main+0x4e>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0x58>
 19c:	00 00       	nop
	float RS_gas; //Define variable for sensor resistance
	float ratio; //Define variable for ratio
	float sensorValue = 0; //Define variable for analog readings
	double ppm_log = 0;
	double ppm = 0;
	uint8_t buzzDuration = 0;
 19e:	c0 e0       	ldi	r28, 0x00	; 0
	float sensor_volt; //Define variable for sensor voltage
	float RS_gas; //Define variable for sensor resistance
	float ratio; //Define variable for ratio
	float sensorValue = 0; //Define variable for analog readings
	double ppm_log = 0;
	double ppm = 0;
 1a0:	f1 2c       	mov	r15, r1
 1a2:	00 e0       	ldi	r16, 0x00	; 0
 1a4:	10 e0       	ldi	r17, 0x00	; 0
 1a6:	d0 e0       	ldi	r29, 0x00	; 0
			ppm_log = (log10(ratio) - b) / m; //Get ppm value in linear scale according to the the ratio value
			ppm = pow(10, ppm_log); //Convert ppm value to log scale
			
			if (ppm > 9999)
			{
				ppm = 10000;
 1a8:	a1 2c       	mov	r10, r1
 1aa:	68 94       	set
 1ac:	bb 24       	eor	r11, r11
 1ae:	b6 f8       	bld	r11, 6
 1b0:	0f 2e       	mov	r0, r31
 1b2:	fc e1       	ldi	r31, 0x1C	; 28
 1b4:	cf 2e       	mov	r12, r31
 1b6:	f0 2d       	mov	r31, r0
 1b8:	0f 2e       	mov	r0, r31
 1ba:	f6 e4       	ldi	r31, 0x46	; 70
 1bc:	df 2e       	mov	r13, r31
 1be:	f0 2d       	mov	r31, r0
				PORTB &= ~(1<<BlueLED_PIN); //Turns OFF LED
				while (buzzDuration <= 8)
				{
					if (buzzerFlag == 1)
					{
						PORTB ^= 1 << REDLED_PIN;
 1c0:	68 94       	set
 1c2:	ee 24       	eor	r14, r14
 1c4:	e3 f8       	bld	r14, 3
 1c6:	01 c0       	rjmp	.+2      	; 0x1ca <main+0x86>
						buzzDuration++;
					}

				}
				if (buzzDuration > 8)
				buzzDuration = 0;
 1c8:	c0 e0       	ldi	r28, 0x00	; 0
	double ppm = 0;
	uint8_t buzzDuration = 0;
	
	while (1)
	{
		if(PPMcalFlag == 1)
 1ca:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <PPMcalFlag>
 1ce:	81 30       	cpi	r24, 0x01	; 1
 1d0:	09 f0       	breq	.+2      	; 0x1d4 <main+0x90>
 1d2:	4c c0       	rjmp	.+152    	; 0x26c <main+0x128>
		{
			sensorValue = average; //Read analog values of sensor
 1d4:	60 91 71 00 	lds	r22, 0x0071	; 0x800071 <average>
 1d8:	70 91 72 00 	lds	r23, 0x0072	; 0x800072 <average+0x1>
			sensor_volt = sensorValue * (5.0 / 1023.0); //Convert analog values to voltage
			RS_gas = ((5.0 * 9.76) / sensor_volt) - 9.76; //Get value of RS in a gas //RS = [(VC x RL) / VRL] - RL
			ratio = RS_gas / R0;   // Get ratio RS_gas/RS_air

			ppm_log = (log10(ratio) - b) / m; //Get ppm value in linear scale according to the the ratio value
 1dc:	80 e0       	ldi	r24, 0x00	; 0
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	ae d1       	rcall	.+860    	; 0x53e <__floatunsisf>
 1e2:	2a e0       	ldi	r18, 0x0A	; 10
 1e4:	38 e2       	ldi	r19, 0x28	; 40
 1e6:	40 ea       	ldi	r20, 0xA0	; 160
 1e8:	5b e3       	ldi	r21, 0x3B	; 59
 1ea:	86 d2       	rcall	.+1292   	; 0x6f8 <__mulsf3>
 1ec:	9b 01       	movw	r18, r22
 1ee:	ac 01       	movw	r20, r24
 1f0:	64 e3       	ldi	r22, 0x34	; 52
 1f2:	73 e3       	ldi	r23, 0x33	; 51
 1f4:	83 e4       	ldi	r24, 0x43	; 67
 1f6:	92 e4       	ldi	r25, 0x42	; 66
 1f8:	3a d1       	rcall	.+628    	; 0x46e <__divsf3>
 1fa:	26 ef       	ldi	r18, 0xF6	; 246
 1fc:	38 e2       	ldi	r19, 0x28	; 40
 1fe:	4c e1       	ldi	r20, 0x1C	; 28
 200:	51 e4       	ldi	r21, 0x41	; 65
 202:	d0 d0       	rcall	.+416    	; 0x3a4 <__subsf3>
 204:	20 91 68 00 	lds	r18, 0x0068	; 0x800068 <R0>
 208:	30 91 69 00 	lds	r19, 0x0069	; 0x800069 <R0+0x1>
 20c:	40 91 6a 00 	lds	r20, 0x006A	; 0x80006a <R0+0x2>
 210:	50 91 6b 00 	lds	r21, 0x006B	; 0x80006b <R0+0x3>
 214:	2c d1       	rcall	.+600    	; 0x46e <__divsf3>
 216:	25 d2       	rcall	.+1098   	; 0x662 <log10>
			ppm = pow(10, ppm_log); //Convert ppm value to log scale
 218:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__data_start>
 21c:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__data_start+0x1>
 220:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__data_start+0x2>
 224:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__data_start+0x3>
 228:	bd d0       	rcall	.+378    	; 0x3a4 <__subsf3>
 22a:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <m>
 22e:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <m+0x1>
 232:	40 91 66 00 	lds	r20, 0x0066	; 0x800066 <m+0x2>
 236:	50 91 67 00 	lds	r21, 0x0067	; 0x800067 <m+0x3>
 23a:	19 d1       	rcall	.+562    	; 0x46e <__divsf3>
 23c:	9b 01       	movw	r18, r22
 23e:	ac 01       	movw	r20, r24
 240:	60 e0       	ldi	r22, 0x00	; 0
 242:	70 e0       	ldi	r23, 0x00	; 0
 244:	80 e2       	ldi	r24, 0x20	; 32
 246:	91 e4       	ldi	r25, 0x41	; 65
 248:	ba d2       	rcall	.+1396   	; 0x7be <pow>
 24a:	f6 2e       	mov	r15, r22
 24c:	07 2f       	mov	r16, r23
 24e:	18 2f       	mov	r17, r24
 250:	d9 2f       	mov	r29, r25
			
			if (ppm > 9999)
 252:	20 e0       	ldi	r18, 0x00	; 0
 254:	3c e3       	ldi	r19, 0x3C	; 60
 256:	4c e1       	ldi	r20, 0x1C	; 28
 258:	56 e4       	ldi	r21, 0x46	; 70
 25a:	ff d1       	rcall	.+1022   	; 0x65a <__gesf2>
 25c:	18 16       	cp	r1, r24
 25e:	24 f4       	brge	.+8      	; 0x268 <main+0x124>
			{
				ppm = 10000;
 260:	fa 2c       	mov	r15, r10
 262:	0b 2d       	mov	r16, r11
 264:	1c 2d       	mov	r17, r12
 266:	dd 2d       	mov	r29, r13
			}
			
			PPMcalFlag = 0;
 268:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <PPMcalFlag>
		}
		
		if (ppm > GASTHRES)
 26c:	20 e0       	ldi	r18, 0x00	; 0
 26e:	30 e0       	ldi	r19, 0x00	; 0
 270:	48 ec       	ldi	r20, 0xC8	; 200
 272:	52 e4       	ldi	r21, 0x42	; 66
 274:	6f 2d       	mov	r22, r15
 276:	70 2f       	mov	r23, r16
 278:	81 2f       	mov	r24, r17
 27a:	9d 2f       	mov	r25, r29
 27c:	ee d1       	rcall	.+988    	; 0x65a <__gesf2>
 27e:	18 16       	cp	r1, r24
 280:	c4 f4       	brge	.+48     	; 0x2b2 <main+0x16e>
			{
				PORTB &= ~(1 <<WhiteLED_PIN);
 282:	c4 98       	cbi	0x18, 4	; 24
				PORTB &= ~(1<<BlueLED_PIN); //Turns OFF LED
 284:	c5 98       	cbi	0x18, 5	; 24
				while (buzzDuration <= 8)
 286:	0d c0       	rjmp	.+26     	; 0x2a2 <main+0x15e>
				{
					if (buzzerFlag == 1)
 288:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <buzzerFlag>
 28c:	81 30       	cpi	r24, 0x01	; 1
 28e:	e1 f7       	brne	.-8      	; 0x288 <main+0x144>
					{
						PORTB ^= 1 << REDLED_PIN;
 290:	88 b3       	in	r24, 0x18	; 24
 292:	8e 25       	eor	r24, r14
 294:	88 bb       	out	0x18, r24	; 24
						PORTD ^= 1 << Buzzer_PIN;
 296:	82 b3       	in	r24, 0x12	; 18
 298:	80 58       	subi	r24, 0x80	; 128
 29a:	82 bb       	out	0x12, r24	; 18
						buzzerFlag = 0;
 29c:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <buzzerFlag>
						buzzDuration++;
 2a0:	cf 5f       	subi	r28, 0xFF	; 255
		
		if (ppm > GASTHRES)
			{
				PORTB &= ~(1 <<WhiteLED_PIN);
				PORTB &= ~(1<<BlueLED_PIN); //Turns OFF LED
				while (buzzDuration <= 8)
 2a2:	c9 30       	cpi	r28, 0x09	; 9
 2a4:	08 f0       	brcs	.+2      	; 0x2a8 <main+0x164>
 2a6:	90 cf       	rjmp	.-224    	; 0x1c8 <main+0x84>
				{
					if (buzzerFlag == 1)
 2a8:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <buzzerFlag>
 2ac:	81 30       	cpi	r24, 0x01	; 1
 2ae:	61 f7       	brne	.-40     	; 0x288 <main+0x144>
 2b0:	ef cf       	rjmp	.-34     	; 0x290 <main+0x14c>
			}
			
			
		else
			{
				if(PIND & (1<<AdapterInput_PIN) ) //If switch is pressed				
 2b2:	86 9b       	sbis	0x10, 6	; 16
 2b4:	03 c0       	rjmp	.+6      	; 0x2bc <main+0x178>
					{
						PORTB &= ~(1<<BlueLED_PIN); //Turns OFF LED
 2b6:	c5 98       	cbi	0x18, 5	; 24
						PORTB |= (1 << WhiteLED_PIN);						
 2b8:	c4 9a       	sbi	0x18, 4	; 24
 2ba:	02 c0       	rjmp	.+4      	; 0x2c0 <main+0x17c>
					}
				else
					{	
						PORTB &= ~(1 <<WhiteLED_PIN);
 2bc:	c4 98       	cbi	0x18, 4	; 24
						PORTB |= (1<<BlueLED_PIN); //Turns ON LED
 2be:	c5 9a       	sbi	0x18, 5	; 24
					}
				PORTD &= ~(1 << Buzzer_PIN);
 2c0:	97 98       	cbi	0x12, 7	; 18
				PORTB &= ~(1 << REDLED_PIN);
 2c2:	c3 98       	cbi	0x18, 3	; 24
				PORTB &= ~(1 << GreenLED_PIN);
 2c4:	c1 98       	cbi	0x18, 1	; 24
 2c6:	81 cf       	rjmp	.-254    	; 0x1ca <main+0x86>

000002c8 <__vector_14>:


	}
}
ISR(ADC_vect)
{
 2c8:	1f 92       	push	r1
 2ca:	0f 92       	push	r0
 2cc:	0f b6       	in	r0, 0x3f	; 63
 2ce:	0f 92       	push	r0
 2d0:	11 24       	eor	r1, r1
 2d2:	0f 93       	push	r16
 2d4:	1f 93       	push	r17
 2d6:	2f 93       	push	r18
 2d8:	3f 93       	push	r19
 2da:	4f 93       	push	r20
 2dc:	5f 93       	push	r21
 2de:	6f 93       	push	r22
 2e0:	7f 93       	push	r23
 2e2:	8f 93       	push	r24
 2e4:	9f 93       	push	r25
 2e6:	af 93       	push	r26
 2e8:	bf 93       	push	r27
 2ea:	ef 93       	push	r30
 2ec:	ff 93       	push	r31
	uint8_t theLowADC = ADCL;
 2ee:	84 b1       	in	r24, 0x04	; 4
	uint16_t theTenBitResults = ADCH<<8 | theLowADC;
 2f0:	25 b1       	in	r18, 0x05	; 5
	
	accumulator += theTenBitResults;
 2f2:	40 91 75 00 	lds	r20, 0x0075	; 0x800075 <accumulator>
 2f6:	50 91 76 00 	lds	r21, 0x0076	; 0x800076 <accumulator+0x1>
 2fa:	60 91 77 00 	lds	r22, 0x0077	; 0x800077 <accumulator+0x2>
 2fe:	70 91 78 00 	lds	r23, 0x0078	; 0x800078 <accumulator+0x3>
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	92 2b       	or	r25, r18
 306:	8a 01       	movw	r16, r20
 308:	9b 01       	movw	r18, r22
 30a:	08 0f       	add	r16, r24
 30c:	19 1f       	adc	r17, r25
 30e:	21 1d       	adc	r18, r1
 310:	31 1d       	adc	r19, r1
 312:	00 93 75 00 	sts	0x0075, r16	; 0x800075 <accumulator>
 316:	10 93 76 00 	sts	0x0076, r17	; 0x800076 <accumulator+0x1>
 31a:	20 93 77 00 	sts	0x0077, r18	; 0x800077 <accumulator+0x2>
 31e:	30 93 78 00 	sts	0x0078, r19	; 0x800078 <accumulator+0x3>
	sample++;
 322:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <sample>
 326:	90 91 74 00 	lds	r25, 0x0074	; 0x800074 <sample+0x1>
 32a:	01 96       	adiw	r24, 0x01	; 1
 32c:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <sample+0x1>
 330:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <sample>
	if(sample == 100)
 334:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <sample>
 338:	90 91 74 00 	lds	r25, 0x0074	; 0x800074 <sample+0x1>
 33c:	84 36       	cpi	r24, 0x64	; 100
 33e:	91 05       	cpc	r25, r1
 340:	e9 f4       	brne	.+58     	; 0x37c <__vector_14+0xb4>
	{
		average = accumulator/100;
 342:	60 91 75 00 	lds	r22, 0x0075	; 0x800075 <accumulator>
 346:	70 91 76 00 	lds	r23, 0x0076	; 0x800076 <accumulator+0x1>
 34a:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <accumulator+0x2>
 34e:	90 91 78 00 	lds	r25, 0x0078	; 0x800078 <accumulator+0x3>
 352:	24 e6       	ldi	r18, 0x64	; 100
 354:	30 e0       	ldi	r19, 0x00	; 0
 356:	40 e0       	ldi	r20, 0x00	; 0
 358:	50 e0       	ldi	r21, 0x00	; 0
 35a:	75 d3       	rcall	.+1770   	; 0xa46 <__udivmodsi4>
 35c:	30 93 72 00 	sts	0x0072, r19	; 0x800072 <average+0x1>
 360:	20 93 71 00 	sts	0x0071, r18	; 0x800071 <average>
		accumulator = 0;
 364:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <accumulator>
 368:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <accumulator+0x1>
 36c:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <accumulator+0x2>
 370:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <accumulator+0x3>
		sample = 0;
 374:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <sample+0x1>
 378:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <sample>
	}
	ADCSRA |= 1<<ADSC;
 37c:	36 9a       	sbi	0x06, 6	; 6
}
 37e:	ff 91       	pop	r31
 380:	ef 91       	pop	r30
 382:	bf 91       	pop	r27
 384:	af 91       	pop	r26
 386:	9f 91       	pop	r25
 388:	8f 91       	pop	r24
 38a:	7f 91       	pop	r23
 38c:	6f 91       	pop	r22
 38e:	5f 91       	pop	r21
 390:	4f 91       	pop	r20
 392:	3f 91       	pop	r19
 394:	2f 91       	pop	r18
 396:	1f 91       	pop	r17
 398:	0f 91       	pop	r16
 39a:	0f 90       	pop	r0
 39c:	0f be       	out	0x3f, r0	; 63
 39e:	0f 90       	pop	r0
 3a0:	1f 90       	pop	r1
 3a2:	18 95       	reti

000003a4 <__subsf3>:
 3a4:	50 58       	subi	r21, 0x80	; 128

000003a6 <__addsf3>:
 3a6:	bb 27       	eor	r27, r27
 3a8:	aa 27       	eor	r26, r26
 3aa:	0e d0       	rcall	.+28     	; 0x3c8 <__addsf3x>
 3ac:	1c c1       	rjmp	.+568    	; 0x5e6 <__fp_round>
 3ae:	0d d1       	rcall	.+538    	; 0x5ca <__fp_pscA>
 3b0:	30 f0       	brcs	.+12     	; 0x3be <__addsf3+0x18>
 3b2:	12 d1       	rcall	.+548    	; 0x5d8 <__fp_pscB>
 3b4:	20 f0       	brcs	.+8      	; 0x3be <__addsf3+0x18>
 3b6:	31 f4       	brne	.+12     	; 0x3c4 <__addsf3+0x1e>
 3b8:	9f 3f       	cpi	r25, 0xFF	; 255
 3ba:	11 f4       	brne	.+4      	; 0x3c0 <__addsf3+0x1a>
 3bc:	1e f4       	brtc	.+6      	; 0x3c4 <__addsf3+0x1e>
 3be:	02 c1       	rjmp	.+516    	; 0x5c4 <__fp_nan>
 3c0:	0e f4       	brtc	.+2      	; 0x3c4 <__addsf3+0x1e>
 3c2:	e0 95       	com	r30
 3c4:	e7 fb       	bst	r30, 7
 3c6:	f8 c0       	rjmp	.+496    	; 0x5b8 <__fp_inf>

000003c8 <__addsf3x>:
 3c8:	e9 2f       	mov	r30, r25
 3ca:	1e d1       	rcall	.+572    	; 0x608 <__fp_split3>
 3cc:	80 f3       	brcs	.-32     	; 0x3ae <__addsf3+0x8>
 3ce:	ba 17       	cp	r27, r26
 3d0:	62 07       	cpc	r22, r18
 3d2:	73 07       	cpc	r23, r19
 3d4:	84 07       	cpc	r24, r20
 3d6:	95 07       	cpc	r25, r21
 3d8:	18 f0       	brcs	.+6      	; 0x3e0 <__addsf3x+0x18>
 3da:	71 f4       	brne	.+28     	; 0x3f8 <__addsf3x+0x30>
 3dc:	9e f5       	brtc	.+102    	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 3de:	36 c1       	rjmp	.+620    	; 0x64c <__fp_zero>
 3e0:	0e f4       	brtc	.+2      	; 0x3e4 <__addsf3x+0x1c>
 3e2:	e0 95       	com	r30
 3e4:	0b 2e       	mov	r0, r27
 3e6:	ba 2f       	mov	r27, r26
 3e8:	a0 2d       	mov	r26, r0
 3ea:	0b 01       	movw	r0, r22
 3ec:	b9 01       	movw	r22, r18
 3ee:	90 01       	movw	r18, r0
 3f0:	0c 01       	movw	r0, r24
 3f2:	ca 01       	movw	r24, r20
 3f4:	a0 01       	movw	r20, r0
 3f6:	11 24       	eor	r1, r1
 3f8:	ff 27       	eor	r31, r31
 3fa:	59 1b       	sub	r21, r25
 3fc:	99 f0       	breq	.+38     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 3fe:	59 3f       	cpi	r21, 0xF9	; 249
 400:	50 f4       	brcc	.+20     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 402:	50 3e       	cpi	r21, 0xE0	; 224
 404:	68 f1       	brcs	.+90     	; 0x460 <__stack+0x1>
 406:	1a 16       	cp	r1, r26
 408:	f0 40       	sbci	r31, 0x00	; 0
 40a:	a2 2f       	mov	r26, r18
 40c:	23 2f       	mov	r18, r19
 40e:	34 2f       	mov	r19, r20
 410:	44 27       	eor	r20, r20
 412:	58 5f       	subi	r21, 0xF8	; 248
 414:	f3 cf       	rjmp	.-26     	; 0x3fc <__addsf3x+0x34>
 416:	46 95       	lsr	r20
 418:	37 95       	ror	r19
 41a:	27 95       	ror	r18
 41c:	a7 95       	ror	r26
 41e:	f0 40       	sbci	r31, 0x00	; 0
 420:	53 95       	inc	r21
 422:	c9 f7       	brne	.-14     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 424:	7e f4       	brtc	.+30     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 426:	1f 16       	cp	r1, r31
 428:	ba 0b       	sbc	r27, r26
 42a:	62 0b       	sbc	r22, r18
 42c:	73 0b       	sbc	r23, r19
 42e:	84 0b       	sbc	r24, r20
 430:	ba f0       	brmi	.+46     	; 0x460 <__stack+0x1>
 432:	91 50       	subi	r25, 0x01	; 1
 434:	a1 f0       	breq	.+40     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 436:	ff 0f       	add	r31, r31
 438:	bb 1f       	adc	r27, r27
 43a:	66 1f       	adc	r22, r22
 43c:	77 1f       	adc	r23, r23
 43e:	88 1f       	adc	r24, r24
 440:	c2 f7       	brpl	.-16     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 442:	0e c0       	rjmp	.+28     	; 0x460 <__stack+0x1>
 444:	ba 0f       	add	r27, r26
 446:	62 1f       	adc	r22, r18
 448:	73 1f       	adc	r23, r19
 44a:	84 1f       	adc	r24, r20
 44c:	48 f4       	brcc	.+18     	; 0x460 <__stack+0x1>
 44e:	87 95       	ror	r24
 450:	77 95       	ror	r23
 452:	67 95       	ror	r22
 454:	b7 95       	ror	r27
 456:	f7 95       	ror	r31
 458:	9e 3f       	cpi	r25, 0xFE	; 254
 45a:	08 f0       	brcs	.+2      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 45c:	b3 cf       	rjmp	.-154    	; 0x3c4 <__addsf3+0x1e>
 45e:	93 95       	inc	r25
 460:	88 0f       	add	r24, r24
 462:	08 f0       	brcs	.+2      	; 0x466 <__stack+0x7>
 464:	99 27       	eor	r25, r25
 466:	ee 0f       	add	r30, r30
 468:	97 95       	ror	r25
 46a:	87 95       	ror	r24
 46c:	08 95       	ret

0000046e <__divsf3>:
 46e:	0c d0       	rcall	.+24     	; 0x488 <__divsf3x>
 470:	ba c0       	rjmp	.+372    	; 0x5e6 <__fp_round>
 472:	b2 d0       	rcall	.+356    	; 0x5d8 <__fp_pscB>
 474:	40 f0       	brcs	.+16     	; 0x486 <__divsf3+0x18>
 476:	a9 d0       	rcall	.+338    	; 0x5ca <__fp_pscA>
 478:	30 f0       	brcs	.+12     	; 0x486 <__divsf3+0x18>
 47a:	21 f4       	brne	.+8      	; 0x484 <__divsf3+0x16>
 47c:	5f 3f       	cpi	r21, 0xFF	; 255
 47e:	19 f0       	breq	.+6      	; 0x486 <__divsf3+0x18>
 480:	9b c0       	rjmp	.+310    	; 0x5b8 <__fp_inf>
 482:	51 11       	cpse	r21, r1
 484:	e4 c0       	rjmp	.+456    	; 0x64e <__fp_szero>
 486:	9e c0       	rjmp	.+316    	; 0x5c4 <__fp_nan>

00000488 <__divsf3x>:
 488:	bf d0       	rcall	.+382    	; 0x608 <__fp_split3>
 48a:	98 f3       	brcs	.-26     	; 0x472 <__divsf3+0x4>

0000048c <__divsf3_pse>:
 48c:	99 23       	and	r25, r25
 48e:	c9 f3       	breq	.-14     	; 0x482 <__divsf3+0x14>
 490:	55 23       	and	r21, r21
 492:	b1 f3       	breq	.-20     	; 0x480 <__divsf3+0x12>
 494:	95 1b       	sub	r25, r21
 496:	55 0b       	sbc	r21, r21
 498:	bb 27       	eor	r27, r27
 49a:	aa 27       	eor	r26, r26
 49c:	62 17       	cp	r22, r18
 49e:	73 07       	cpc	r23, r19
 4a0:	84 07       	cpc	r24, r20
 4a2:	38 f0       	brcs	.+14     	; 0x4b2 <__divsf3_pse+0x26>
 4a4:	9f 5f       	subi	r25, 0xFF	; 255
 4a6:	5f 4f       	sbci	r21, 0xFF	; 255
 4a8:	22 0f       	add	r18, r18
 4aa:	33 1f       	adc	r19, r19
 4ac:	44 1f       	adc	r20, r20
 4ae:	aa 1f       	adc	r26, r26
 4b0:	a9 f3       	breq	.-22     	; 0x49c <__divsf3_pse+0x10>
 4b2:	33 d0       	rcall	.+102    	; 0x51a <__divsf3_pse+0x8e>
 4b4:	0e 2e       	mov	r0, r30
 4b6:	3a f0       	brmi	.+14     	; 0x4c6 <__divsf3_pse+0x3a>
 4b8:	e0 e8       	ldi	r30, 0x80	; 128
 4ba:	30 d0       	rcall	.+96     	; 0x51c <__divsf3_pse+0x90>
 4bc:	91 50       	subi	r25, 0x01	; 1
 4be:	50 40       	sbci	r21, 0x00	; 0
 4c0:	e6 95       	lsr	r30
 4c2:	00 1c       	adc	r0, r0
 4c4:	ca f7       	brpl	.-14     	; 0x4b8 <__divsf3_pse+0x2c>
 4c6:	29 d0       	rcall	.+82     	; 0x51a <__divsf3_pse+0x8e>
 4c8:	fe 2f       	mov	r31, r30
 4ca:	27 d0       	rcall	.+78     	; 0x51a <__divsf3_pse+0x8e>
 4cc:	66 0f       	add	r22, r22
 4ce:	77 1f       	adc	r23, r23
 4d0:	88 1f       	adc	r24, r24
 4d2:	bb 1f       	adc	r27, r27
 4d4:	26 17       	cp	r18, r22
 4d6:	37 07       	cpc	r19, r23
 4d8:	48 07       	cpc	r20, r24
 4da:	ab 07       	cpc	r26, r27
 4dc:	b0 e8       	ldi	r27, 0x80	; 128
 4de:	09 f0       	breq	.+2      	; 0x4e2 <__divsf3_pse+0x56>
 4e0:	bb 0b       	sbc	r27, r27
 4e2:	80 2d       	mov	r24, r0
 4e4:	bf 01       	movw	r22, r30
 4e6:	ff 27       	eor	r31, r31
 4e8:	93 58       	subi	r25, 0x83	; 131
 4ea:	5f 4f       	sbci	r21, 0xFF	; 255
 4ec:	2a f0       	brmi	.+10     	; 0x4f8 <__divsf3_pse+0x6c>
 4ee:	9e 3f       	cpi	r25, 0xFE	; 254
 4f0:	51 05       	cpc	r21, r1
 4f2:	68 f0       	brcs	.+26     	; 0x50e <__divsf3_pse+0x82>
 4f4:	61 c0       	rjmp	.+194    	; 0x5b8 <__fp_inf>
 4f6:	ab c0       	rjmp	.+342    	; 0x64e <__fp_szero>
 4f8:	5f 3f       	cpi	r21, 0xFF	; 255
 4fa:	ec f3       	brlt	.-6      	; 0x4f6 <__divsf3_pse+0x6a>
 4fc:	98 3e       	cpi	r25, 0xE8	; 232
 4fe:	dc f3       	brlt	.-10     	; 0x4f6 <__divsf3_pse+0x6a>
 500:	86 95       	lsr	r24
 502:	77 95       	ror	r23
 504:	67 95       	ror	r22
 506:	b7 95       	ror	r27
 508:	f7 95       	ror	r31
 50a:	9f 5f       	subi	r25, 0xFF	; 255
 50c:	c9 f7       	brne	.-14     	; 0x500 <__divsf3_pse+0x74>
 50e:	88 0f       	add	r24, r24
 510:	91 1d       	adc	r25, r1
 512:	96 95       	lsr	r25
 514:	87 95       	ror	r24
 516:	97 f9       	bld	r25, 7
 518:	08 95       	ret
 51a:	e1 e0       	ldi	r30, 0x01	; 1
 51c:	66 0f       	add	r22, r22
 51e:	77 1f       	adc	r23, r23
 520:	88 1f       	adc	r24, r24
 522:	bb 1f       	adc	r27, r27
 524:	62 17       	cp	r22, r18
 526:	73 07       	cpc	r23, r19
 528:	84 07       	cpc	r24, r20
 52a:	ba 07       	cpc	r27, r26
 52c:	20 f0       	brcs	.+8      	; 0x536 <__divsf3_pse+0xaa>
 52e:	62 1b       	sub	r22, r18
 530:	73 0b       	sbc	r23, r19
 532:	84 0b       	sbc	r24, r20
 534:	ba 0b       	sbc	r27, r26
 536:	ee 1f       	adc	r30, r30
 538:	88 f7       	brcc	.-30     	; 0x51c <__divsf3_pse+0x90>
 53a:	e0 95       	com	r30
 53c:	08 95       	ret

0000053e <__floatunsisf>:
 53e:	e8 94       	clt
 540:	09 c0       	rjmp	.+18     	; 0x554 <__floatsisf+0x12>

00000542 <__floatsisf>:
 542:	97 fb       	bst	r25, 7
 544:	3e f4       	brtc	.+14     	; 0x554 <__floatsisf+0x12>
 546:	90 95       	com	r25
 548:	80 95       	com	r24
 54a:	70 95       	com	r23
 54c:	61 95       	neg	r22
 54e:	7f 4f       	sbci	r23, 0xFF	; 255
 550:	8f 4f       	sbci	r24, 0xFF	; 255
 552:	9f 4f       	sbci	r25, 0xFF	; 255
 554:	99 23       	and	r25, r25
 556:	a9 f0       	breq	.+42     	; 0x582 <__floatsisf+0x40>
 558:	f9 2f       	mov	r31, r25
 55a:	96 e9       	ldi	r25, 0x96	; 150
 55c:	bb 27       	eor	r27, r27
 55e:	93 95       	inc	r25
 560:	f6 95       	lsr	r31
 562:	87 95       	ror	r24
 564:	77 95       	ror	r23
 566:	67 95       	ror	r22
 568:	b7 95       	ror	r27
 56a:	f1 11       	cpse	r31, r1
 56c:	f8 cf       	rjmp	.-16     	; 0x55e <__floatsisf+0x1c>
 56e:	fa f4       	brpl	.+62     	; 0x5ae <__floatsisf+0x6c>
 570:	bb 0f       	add	r27, r27
 572:	11 f4       	brne	.+4      	; 0x578 <__floatsisf+0x36>
 574:	60 ff       	sbrs	r22, 0
 576:	1b c0       	rjmp	.+54     	; 0x5ae <__floatsisf+0x6c>
 578:	6f 5f       	subi	r22, 0xFF	; 255
 57a:	7f 4f       	sbci	r23, 0xFF	; 255
 57c:	8f 4f       	sbci	r24, 0xFF	; 255
 57e:	9f 4f       	sbci	r25, 0xFF	; 255
 580:	16 c0       	rjmp	.+44     	; 0x5ae <__floatsisf+0x6c>
 582:	88 23       	and	r24, r24
 584:	11 f0       	breq	.+4      	; 0x58a <__floatsisf+0x48>
 586:	96 e9       	ldi	r25, 0x96	; 150
 588:	11 c0       	rjmp	.+34     	; 0x5ac <__floatsisf+0x6a>
 58a:	77 23       	and	r23, r23
 58c:	21 f0       	breq	.+8      	; 0x596 <__floatsisf+0x54>
 58e:	9e e8       	ldi	r25, 0x8E	; 142
 590:	87 2f       	mov	r24, r23
 592:	76 2f       	mov	r23, r22
 594:	05 c0       	rjmp	.+10     	; 0x5a0 <__floatsisf+0x5e>
 596:	66 23       	and	r22, r22
 598:	71 f0       	breq	.+28     	; 0x5b6 <__floatsisf+0x74>
 59a:	96 e8       	ldi	r25, 0x86	; 134
 59c:	86 2f       	mov	r24, r22
 59e:	70 e0       	ldi	r23, 0x00	; 0
 5a0:	60 e0       	ldi	r22, 0x00	; 0
 5a2:	2a f0       	brmi	.+10     	; 0x5ae <__floatsisf+0x6c>
 5a4:	9a 95       	dec	r25
 5a6:	66 0f       	add	r22, r22
 5a8:	77 1f       	adc	r23, r23
 5aa:	88 1f       	adc	r24, r24
 5ac:	da f7       	brpl	.-10     	; 0x5a4 <__floatsisf+0x62>
 5ae:	88 0f       	add	r24, r24
 5b0:	96 95       	lsr	r25
 5b2:	87 95       	ror	r24
 5b4:	97 f9       	bld	r25, 7
 5b6:	08 95       	ret

000005b8 <__fp_inf>:
 5b8:	97 f9       	bld	r25, 7
 5ba:	9f 67       	ori	r25, 0x7F	; 127
 5bc:	80 e8       	ldi	r24, 0x80	; 128
 5be:	70 e0       	ldi	r23, 0x00	; 0
 5c0:	60 e0       	ldi	r22, 0x00	; 0
 5c2:	08 95       	ret

000005c4 <__fp_nan>:
 5c4:	9f ef       	ldi	r25, 0xFF	; 255
 5c6:	80 ec       	ldi	r24, 0xC0	; 192
 5c8:	08 95       	ret

000005ca <__fp_pscA>:
 5ca:	00 24       	eor	r0, r0
 5cc:	0a 94       	dec	r0
 5ce:	16 16       	cp	r1, r22
 5d0:	17 06       	cpc	r1, r23
 5d2:	18 06       	cpc	r1, r24
 5d4:	09 06       	cpc	r0, r25
 5d6:	08 95       	ret

000005d8 <__fp_pscB>:
 5d8:	00 24       	eor	r0, r0
 5da:	0a 94       	dec	r0
 5dc:	12 16       	cp	r1, r18
 5de:	13 06       	cpc	r1, r19
 5e0:	14 06       	cpc	r1, r20
 5e2:	05 06       	cpc	r0, r21
 5e4:	08 95       	ret

000005e6 <__fp_round>:
 5e6:	09 2e       	mov	r0, r25
 5e8:	03 94       	inc	r0
 5ea:	00 0c       	add	r0, r0
 5ec:	11 f4       	brne	.+4      	; 0x5f2 <__fp_round+0xc>
 5ee:	88 23       	and	r24, r24
 5f0:	52 f0       	brmi	.+20     	; 0x606 <__fp_round+0x20>
 5f2:	bb 0f       	add	r27, r27
 5f4:	40 f4       	brcc	.+16     	; 0x606 <__fp_round+0x20>
 5f6:	bf 2b       	or	r27, r31
 5f8:	11 f4       	brne	.+4      	; 0x5fe <__fp_round+0x18>
 5fa:	60 ff       	sbrs	r22, 0
 5fc:	04 c0       	rjmp	.+8      	; 0x606 <__fp_round+0x20>
 5fe:	6f 5f       	subi	r22, 0xFF	; 255
 600:	7f 4f       	sbci	r23, 0xFF	; 255
 602:	8f 4f       	sbci	r24, 0xFF	; 255
 604:	9f 4f       	sbci	r25, 0xFF	; 255
 606:	08 95       	ret

00000608 <__fp_split3>:
 608:	57 fd       	sbrc	r21, 7
 60a:	90 58       	subi	r25, 0x80	; 128
 60c:	44 0f       	add	r20, r20
 60e:	55 1f       	adc	r21, r21
 610:	59 f0       	breq	.+22     	; 0x628 <__fp_splitA+0x10>
 612:	5f 3f       	cpi	r21, 0xFF	; 255
 614:	71 f0       	breq	.+28     	; 0x632 <__fp_splitA+0x1a>
 616:	47 95       	ror	r20

00000618 <__fp_splitA>:
 618:	88 0f       	add	r24, r24
 61a:	97 fb       	bst	r25, 7
 61c:	99 1f       	adc	r25, r25
 61e:	61 f0       	breq	.+24     	; 0x638 <__fp_splitA+0x20>
 620:	9f 3f       	cpi	r25, 0xFF	; 255
 622:	79 f0       	breq	.+30     	; 0x642 <__fp_splitA+0x2a>
 624:	87 95       	ror	r24
 626:	08 95       	ret
 628:	12 16       	cp	r1, r18
 62a:	13 06       	cpc	r1, r19
 62c:	14 06       	cpc	r1, r20
 62e:	55 1f       	adc	r21, r21
 630:	f2 cf       	rjmp	.-28     	; 0x616 <__fp_split3+0xe>
 632:	46 95       	lsr	r20
 634:	f1 df       	rcall	.-30     	; 0x618 <__fp_splitA>
 636:	08 c0       	rjmp	.+16     	; 0x648 <__fp_splitA+0x30>
 638:	16 16       	cp	r1, r22
 63a:	17 06       	cpc	r1, r23
 63c:	18 06       	cpc	r1, r24
 63e:	99 1f       	adc	r25, r25
 640:	f1 cf       	rjmp	.-30     	; 0x624 <__fp_splitA+0xc>
 642:	86 95       	lsr	r24
 644:	71 05       	cpc	r23, r1
 646:	61 05       	cpc	r22, r1
 648:	08 94       	sec
 64a:	08 95       	ret

0000064c <__fp_zero>:
 64c:	e8 94       	clt

0000064e <__fp_szero>:
 64e:	bb 27       	eor	r27, r27
 650:	66 27       	eor	r22, r22
 652:	77 27       	eor	r23, r23
 654:	cb 01       	movw	r24, r22
 656:	97 f9       	bld	r25, 7
 658:	08 95       	ret

0000065a <__gesf2>:
 65a:	2e d1       	rcall	.+604    	; 0x8b8 <__fp_cmp>
 65c:	08 f4       	brcc	.+2      	; 0x660 <__gesf2+0x6>
 65e:	8f ef       	ldi	r24, 0xFF	; 255
 660:	08 95       	ret

00000662 <log10>:
 662:	0a d0       	rcall	.+20     	; 0x678 <log>
 664:	29 ed       	ldi	r18, 0xD9	; 217
 666:	3b e5       	ldi	r19, 0x5B	; 91
 668:	4e ed       	ldi	r20, 0xDE	; 222
 66a:	5e e3       	ldi	r21, 0x3E	; 62
 66c:	45 c0       	rjmp	.+138    	; 0x6f8 <__mulsf3>
 66e:	0e f0       	brts	.+2      	; 0x672 <log10+0x10>
 670:	47 c1       	rjmp	.+654    	; 0x900 <__fp_mpack>
 672:	a8 cf       	rjmp	.-176    	; 0x5c4 <__fp_nan>
 674:	68 94       	set
 676:	a0 cf       	rjmp	.-192    	; 0x5b8 <__fp_inf>

00000678 <log>:
 678:	cf df       	rcall	.-98     	; 0x618 <__fp_splitA>
 67a:	c8 f3       	brcs	.-14     	; 0x66e <log10+0xc>
 67c:	99 23       	and	r25, r25
 67e:	d1 f3       	breq	.-12     	; 0x674 <log10+0x12>
 680:	c6 f3       	brts	.-16     	; 0x672 <log10+0x10>
 682:	df 93       	push	r29
 684:	cf 93       	push	r28
 686:	1f 93       	push	r17
 688:	0f 93       	push	r16
 68a:	ff 92       	push	r15
 68c:	c9 2f       	mov	r28, r25
 68e:	dd 27       	eor	r29, r29
 690:	88 23       	and	r24, r24
 692:	2a f0       	brmi	.+10     	; 0x69e <log+0x26>
 694:	21 97       	sbiw	r28, 0x01	; 1
 696:	66 0f       	add	r22, r22
 698:	77 1f       	adc	r23, r23
 69a:	88 1f       	adc	r24, r24
 69c:	da f7       	brpl	.-10     	; 0x694 <log+0x1c>
 69e:	20 e0       	ldi	r18, 0x00	; 0
 6a0:	30 e0       	ldi	r19, 0x00	; 0
 6a2:	40 e8       	ldi	r20, 0x80	; 128
 6a4:	5f eb       	ldi	r21, 0xBF	; 191
 6a6:	9f e3       	ldi	r25, 0x3F	; 63
 6a8:	88 39       	cpi	r24, 0x98	; 152
 6aa:	20 f0       	brcs	.+8      	; 0x6b4 <log+0x3c>
 6ac:	80 3e       	cpi	r24, 0xE0	; 224
 6ae:	30 f0       	brcs	.+12     	; 0x6bc <log+0x44>
 6b0:	21 96       	adiw	r28, 0x01	; 1
 6b2:	8f 77       	andi	r24, 0x7F	; 127
 6b4:	78 de       	rcall	.-784    	; 0x3a6 <__addsf3>
 6b6:	e6 e2       	ldi	r30, 0x26	; 38
 6b8:	f0 e0       	ldi	r31, 0x00	; 0
 6ba:	03 c0       	rjmp	.+6      	; 0x6c2 <log+0x4a>
 6bc:	74 de       	rcall	.-792    	; 0x3a6 <__addsf3>
 6be:	e3 e5       	ldi	r30, 0x53	; 83
 6c0:	f0 e0       	ldi	r31, 0x00	; 0
 6c2:	2c d1       	rcall	.+600    	; 0x91c <__fp_powser>
 6c4:	8b 01       	movw	r16, r22
 6c6:	be 01       	movw	r22, r28
 6c8:	ec 01       	movw	r28, r24
 6ca:	fb 2e       	mov	r15, r27
 6cc:	6f 57       	subi	r22, 0x7F	; 127
 6ce:	71 09       	sbc	r23, r1
 6d0:	75 95       	asr	r23
 6d2:	77 1f       	adc	r23, r23
 6d4:	88 0b       	sbc	r24, r24
 6d6:	99 0b       	sbc	r25, r25
 6d8:	34 df       	rcall	.-408    	; 0x542 <__floatsisf>
 6da:	28 e1       	ldi	r18, 0x18	; 24
 6dc:	32 e7       	ldi	r19, 0x72	; 114
 6de:	41 e3       	ldi	r20, 0x31	; 49
 6e0:	5f e3       	ldi	r21, 0x3F	; 63
 6e2:	16 d0       	rcall	.+44     	; 0x710 <__mulsf3x>
 6e4:	af 2d       	mov	r26, r15
 6e6:	98 01       	movw	r18, r16
 6e8:	ae 01       	movw	r20, r28
 6ea:	ff 90       	pop	r15
 6ec:	0f 91       	pop	r16
 6ee:	1f 91       	pop	r17
 6f0:	cf 91       	pop	r28
 6f2:	df 91       	pop	r29
 6f4:	69 de       	rcall	.-814    	; 0x3c8 <__addsf3x>
 6f6:	77 cf       	rjmp	.-274    	; 0x5e6 <__fp_round>

000006f8 <__mulsf3>:
 6f8:	0b d0       	rcall	.+22     	; 0x710 <__mulsf3x>
 6fa:	75 cf       	rjmp	.-278    	; 0x5e6 <__fp_round>
 6fc:	66 df       	rcall	.-308    	; 0x5ca <__fp_pscA>
 6fe:	28 f0       	brcs	.+10     	; 0x70a <__mulsf3+0x12>
 700:	6b df       	rcall	.-298    	; 0x5d8 <__fp_pscB>
 702:	18 f0       	brcs	.+6      	; 0x70a <__mulsf3+0x12>
 704:	95 23       	and	r25, r21
 706:	09 f0       	breq	.+2      	; 0x70a <__mulsf3+0x12>
 708:	57 cf       	rjmp	.-338    	; 0x5b8 <__fp_inf>
 70a:	5c cf       	rjmp	.-328    	; 0x5c4 <__fp_nan>
 70c:	11 24       	eor	r1, r1
 70e:	9f cf       	rjmp	.-194    	; 0x64e <__fp_szero>

00000710 <__mulsf3x>:
 710:	7b df       	rcall	.-266    	; 0x608 <__fp_split3>
 712:	a0 f3       	brcs	.-24     	; 0x6fc <__mulsf3+0x4>

00000714 <__mulsf3_pse>:
 714:	95 9f       	mul	r25, r21
 716:	d1 f3       	breq	.-12     	; 0x70c <__mulsf3+0x14>
 718:	95 0f       	add	r25, r21
 71a:	50 e0       	ldi	r21, 0x00	; 0
 71c:	55 1f       	adc	r21, r21
 71e:	62 9f       	mul	r22, r18
 720:	f0 01       	movw	r30, r0
 722:	72 9f       	mul	r23, r18
 724:	bb 27       	eor	r27, r27
 726:	f0 0d       	add	r31, r0
 728:	b1 1d       	adc	r27, r1
 72a:	63 9f       	mul	r22, r19
 72c:	aa 27       	eor	r26, r26
 72e:	f0 0d       	add	r31, r0
 730:	b1 1d       	adc	r27, r1
 732:	aa 1f       	adc	r26, r26
 734:	64 9f       	mul	r22, r20
 736:	66 27       	eor	r22, r22
 738:	b0 0d       	add	r27, r0
 73a:	a1 1d       	adc	r26, r1
 73c:	66 1f       	adc	r22, r22
 73e:	82 9f       	mul	r24, r18
 740:	22 27       	eor	r18, r18
 742:	b0 0d       	add	r27, r0
 744:	a1 1d       	adc	r26, r1
 746:	62 1f       	adc	r22, r18
 748:	73 9f       	mul	r23, r19
 74a:	b0 0d       	add	r27, r0
 74c:	a1 1d       	adc	r26, r1
 74e:	62 1f       	adc	r22, r18
 750:	83 9f       	mul	r24, r19
 752:	a0 0d       	add	r26, r0
 754:	61 1d       	adc	r22, r1
 756:	22 1f       	adc	r18, r18
 758:	74 9f       	mul	r23, r20
 75a:	33 27       	eor	r19, r19
 75c:	a0 0d       	add	r26, r0
 75e:	61 1d       	adc	r22, r1
 760:	23 1f       	adc	r18, r19
 762:	84 9f       	mul	r24, r20
 764:	60 0d       	add	r22, r0
 766:	21 1d       	adc	r18, r1
 768:	82 2f       	mov	r24, r18
 76a:	76 2f       	mov	r23, r22
 76c:	6a 2f       	mov	r22, r26
 76e:	11 24       	eor	r1, r1
 770:	9f 57       	subi	r25, 0x7F	; 127
 772:	50 40       	sbci	r21, 0x00	; 0
 774:	8a f0       	brmi	.+34     	; 0x798 <__mulsf3_pse+0x84>
 776:	e1 f0       	breq	.+56     	; 0x7b0 <__mulsf3_pse+0x9c>
 778:	88 23       	and	r24, r24
 77a:	4a f0       	brmi	.+18     	; 0x78e <__mulsf3_pse+0x7a>
 77c:	ee 0f       	add	r30, r30
 77e:	ff 1f       	adc	r31, r31
 780:	bb 1f       	adc	r27, r27
 782:	66 1f       	adc	r22, r22
 784:	77 1f       	adc	r23, r23
 786:	88 1f       	adc	r24, r24
 788:	91 50       	subi	r25, 0x01	; 1
 78a:	50 40       	sbci	r21, 0x00	; 0
 78c:	a9 f7       	brne	.-22     	; 0x778 <__mulsf3_pse+0x64>
 78e:	9e 3f       	cpi	r25, 0xFE	; 254
 790:	51 05       	cpc	r21, r1
 792:	70 f0       	brcs	.+28     	; 0x7b0 <__mulsf3_pse+0x9c>
 794:	11 cf       	rjmp	.-478    	; 0x5b8 <__fp_inf>
 796:	5b cf       	rjmp	.-330    	; 0x64e <__fp_szero>
 798:	5f 3f       	cpi	r21, 0xFF	; 255
 79a:	ec f3       	brlt	.-6      	; 0x796 <__mulsf3_pse+0x82>
 79c:	98 3e       	cpi	r25, 0xE8	; 232
 79e:	dc f3       	brlt	.-10     	; 0x796 <__mulsf3_pse+0x82>
 7a0:	86 95       	lsr	r24
 7a2:	77 95       	ror	r23
 7a4:	67 95       	ror	r22
 7a6:	b7 95       	ror	r27
 7a8:	f7 95       	ror	r31
 7aa:	e7 95       	ror	r30
 7ac:	9f 5f       	subi	r25, 0xFF	; 255
 7ae:	c1 f7       	brne	.-16     	; 0x7a0 <__mulsf3_pse+0x8c>
 7b0:	fe 2b       	or	r31, r30
 7b2:	88 0f       	add	r24, r24
 7b4:	91 1d       	adc	r25, r1
 7b6:	96 95       	lsr	r25
 7b8:	87 95       	ror	r24
 7ba:	97 f9       	bld	r25, 7
 7bc:	08 95       	ret

000007be <pow>:
 7be:	fa 01       	movw	r30, r20
 7c0:	ee 0f       	add	r30, r30
 7c2:	ff 1f       	adc	r31, r31
 7c4:	30 96       	adiw	r30, 0x00	; 0
 7c6:	21 05       	cpc	r18, r1
 7c8:	31 05       	cpc	r19, r1
 7ca:	99 f1       	breq	.+102    	; 0x832 <pow+0x74>
 7cc:	61 15       	cp	r22, r1
 7ce:	71 05       	cpc	r23, r1
 7d0:	61 f4       	brne	.+24     	; 0x7ea <pow+0x2c>
 7d2:	80 38       	cpi	r24, 0x80	; 128
 7d4:	bf e3       	ldi	r27, 0x3F	; 63
 7d6:	9b 07       	cpc	r25, r27
 7d8:	49 f1       	breq	.+82     	; 0x82c <pow+0x6e>
 7da:	68 94       	set
 7dc:	90 38       	cpi	r25, 0x80	; 128
 7de:	81 05       	cpc	r24, r1
 7e0:	61 f0       	breq	.+24     	; 0x7fa <pow+0x3c>
 7e2:	80 38       	cpi	r24, 0x80	; 128
 7e4:	bf ef       	ldi	r27, 0xFF	; 255
 7e6:	9b 07       	cpc	r25, r27
 7e8:	41 f0       	breq	.+16     	; 0x7fa <pow+0x3c>
 7ea:	99 23       	and	r25, r25
 7ec:	42 f5       	brpl	.+80     	; 0x83e <pow+0x80>
 7ee:	ff 3f       	cpi	r31, 0xFF	; 255
 7f0:	e1 05       	cpc	r30, r1
 7f2:	31 05       	cpc	r19, r1
 7f4:	21 05       	cpc	r18, r1
 7f6:	11 f1       	breq	.+68     	; 0x83c <pow+0x7e>
 7f8:	e8 94       	clt
 7fa:	08 94       	sec
 7fc:	e7 95       	ror	r30
 7fe:	d9 01       	movw	r26, r18
 800:	aa 23       	and	r26, r26
 802:	29 f4       	brne	.+10     	; 0x80e <pow+0x50>
 804:	ab 2f       	mov	r26, r27
 806:	be 2f       	mov	r27, r30
 808:	f8 5f       	subi	r31, 0xF8	; 248
 80a:	d0 f3       	brcs	.-12     	; 0x800 <pow+0x42>
 80c:	10 c0       	rjmp	.+32     	; 0x82e <pow+0x70>
 80e:	ff 5f       	subi	r31, 0xFF	; 255
 810:	70 f4       	brcc	.+28     	; 0x82e <pow+0x70>
 812:	a6 95       	lsr	r26
 814:	e0 f7       	brcc	.-8      	; 0x80e <pow+0x50>
 816:	f7 39       	cpi	r31, 0x97	; 151
 818:	50 f0       	brcs	.+20     	; 0x82e <pow+0x70>
 81a:	19 f0       	breq	.+6      	; 0x822 <pow+0x64>
 81c:	ff 3a       	cpi	r31, 0xAF	; 175
 81e:	38 f4       	brcc	.+14     	; 0x82e <pow+0x70>
 820:	9f 77       	andi	r25, 0x7F	; 127
 822:	9f 93       	push	r25
 824:	0c d0       	rcall	.+24     	; 0x83e <pow+0x80>
 826:	0f 90       	pop	r0
 828:	07 fc       	sbrc	r0, 7
 82a:	90 58       	subi	r25, 0x80	; 128
 82c:	08 95       	ret
 82e:	3e f0       	brts	.+14     	; 0x83e <pow+0x80>
 830:	c9 ce       	rjmp	.-622    	; 0x5c4 <__fp_nan>
 832:	60 e0       	ldi	r22, 0x00	; 0
 834:	70 e0       	ldi	r23, 0x00	; 0
 836:	80 e8       	ldi	r24, 0x80	; 128
 838:	9f e3       	ldi	r25, 0x3F	; 63
 83a:	08 95       	ret
 83c:	4f e7       	ldi	r20, 0x7F	; 127
 83e:	9f 77       	andi	r25, 0x7F	; 127
 840:	5f 93       	push	r21
 842:	4f 93       	push	r20
 844:	3f 93       	push	r19
 846:	2f 93       	push	r18
 848:	17 df       	rcall	.-466    	; 0x678 <log>
 84a:	2f 91       	pop	r18
 84c:	3f 91       	pop	r19
 84e:	4f 91       	pop	r20
 850:	5f 91       	pop	r21
 852:	52 df       	rcall	.-348    	; 0x6f8 <__mulsf3>
 854:	05 c0       	rjmp	.+10     	; 0x860 <exp>
 856:	19 f4       	brne	.+6      	; 0x85e <pow+0xa0>
 858:	0e f0       	brts	.+2      	; 0x85c <pow+0x9e>
 85a:	ae ce       	rjmp	.-676    	; 0x5b8 <__fp_inf>
 85c:	f7 ce       	rjmp	.-530    	; 0x64c <__fp_zero>
 85e:	b2 ce       	rjmp	.-668    	; 0x5c4 <__fp_nan>

00000860 <exp>:
 860:	db de       	rcall	.-586    	; 0x618 <__fp_splitA>
 862:	c8 f3       	brcs	.-14     	; 0x856 <pow+0x98>
 864:	96 38       	cpi	r25, 0x86	; 134
 866:	c0 f7       	brcc	.-16     	; 0x858 <pow+0x9a>
 868:	07 f8       	bld	r0, 7
 86a:	0f 92       	push	r0
 86c:	e8 94       	clt
 86e:	2b e3       	ldi	r18, 0x3B	; 59
 870:	3a ea       	ldi	r19, 0xAA	; 170
 872:	48 eb       	ldi	r20, 0xB8	; 184
 874:	5f e7       	ldi	r21, 0x7F	; 127
 876:	4e df       	rcall	.-356    	; 0x714 <__mulsf3_pse>
 878:	0f 92       	push	r0
 87a:	0f 92       	push	r0
 87c:	0f 92       	push	r0
 87e:	4d b7       	in	r20, 0x3d	; 61
 880:	5e b7       	in	r21, 0x3e	; 62
 882:	0f 92       	push	r0
 884:	ad d0       	rcall	.+346    	; 0x9e0 <modf>
 886:	e0 e8       	ldi	r30, 0x80	; 128
 888:	f0 e0       	ldi	r31, 0x00	; 0
 88a:	48 d0       	rcall	.+144    	; 0x91c <__fp_powser>
 88c:	4f 91       	pop	r20
 88e:	5f 91       	pop	r21
 890:	ef 91       	pop	r30
 892:	ff 91       	pop	r31
 894:	e5 95       	asr	r30
 896:	ee 1f       	adc	r30, r30
 898:	ff 1f       	adc	r31, r31
 89a:	49 f0       	breq	.+18     	; 0x8ae <exp+0x4e>
 89c:	fe 57       	subi	r31, 0x7E	; 126
 89e:	e0 68       	ori	r30, 0x80	; 128
 8a0:	44 27       	eor	r20, r20
 8a2:	ee 0f       	add	r30, r30
 8a4:	44 1f       	adc	r20, r20
 8a6:	fa 95       	dec	r31
 8a8:	e1 f7       	brne	.-8      	; 0x8a2 <exp+0x42>
 8aa:	41 95       	neg	r20
 8ac:	55 0b       	sbc	r21, r21
 8ae:	64 d0       	rcall	.+200    	; 0x978 <ldexp>
 8b0:	0f 90       	pop	r0
 8b2:	07 fe       	sbrs	r0, 7
 8b4:	58 c0       	rjmp	.+176    	; 0x966 <inverse>
 8b6:	08 95       	ret

000008b8 <__fp_cmp>:
 8b8:	99 0f       	add	r25, r25
 8ba:	00 08       	sbc	r0, r0
 8bc:	55 0f       	add	r21, r21
 8be:	aa 0b       	sbc	r26, r26
 8c0:	e0 e8       	ldi	r30, 0x80	; 128
 8c2:	fe ef       	ldi	r31, 0xFE	; 254
 8c4:	16 16       	cp	r1, r22
 8c6:	17 06       	cpc	r1, r23
 8c8:	e8 07       	cpc	r30, r24
 8ca:	f9 07       	cpc	r31, r25
 8cc:	c0 f0       	brcs	.+48     	; 0x8fe <__fp_cmp+0x46>
 8ce:	12 16       	cp	r1, r18
 8d0:	13 06       	cpc	r1, r19
 8d2:	e4 07       	cpc	r30, r20
 8d4:	f5 07       	cpc	r31, r21
 8d6:	98 f0       	brcs	.+38     	; 0x8fe <__fp_cmp+0x46>
 8d8:	62 1b       	sub	r22, r18
 8da:	73 0b       	sbc	r23, r19
 8dc:	84 0b       	sbc	r24, r20
 8de:	95 0b       	sbc	r25, r21
 8e0:	39 f4       	brne	.+14     	; 0x8f0 <__fp_cmp+0x38>
 8e2:	0a 26       	eor	r0, r26
 8e4:	61 f0       	breq	.+24     	; 0x8fe <__fp_cmp+0x46>
 8e6:	23 2b       	or	r18, r19
 8e8:	24 2b       	or	r18, r20
 8ea:	25 2b       	or	r18, r21
 8ec:	21 f4       	brne	.+8      	; 0x8f6 <__fp_cmp+0x3e>
 8ee:	08 95       	ret
 8f0:	0a 26       	eor	r0, r26
 8f2:	09 f4       	brne	.+2      	; 0x8f6 <__fp_cmp+0x3e>
 8f4:	a1 40       	sbci	r26, 0x01	; 1
 8f6:	a6 95       	lsr	r26
 8f8:	8f ef       	ldi	r24, 0xFF	; 255
 8fa:	81 1d       	adc	r24, r1
 8fc:	81 1d       	adc	r24, r1
 8fe:	08 95       	ret

00000900 <__fp_mpack>:
 900:	9f 3f       	cpi	r25, 0xFF	; 255
 902:	31 f0       	breq	.+12     	; 0x910 <__fp_mpack_finite+0xc>

00000904 <__fp_mpack_finite>:
 904:	91 50       	subi	r25, 0x01	; 1
 906:	20 f4       	brcc	.+8      	; 0x910 <__fp_mpack_finite+0xc>
 908:	87 95       	ror	r24
 90a:	77 95       	ror	r23
 90c:	67 95       	ror	r22
 90e:	b7 95       	ror	r27
 910:	88 0f       	add	r24, r24
 912:	91 1d       	adc	r25, r1
 914:	96 95       	lsr	r25
 916:	87 95       	ror	r24
 918:	97 f9       	bld	r25, 7
 91a:	08 95       	ret

0000091c <__fp_powser>:
 91c:	df 93       	push	r29
 91e:	cf 93       	push	r28
 920:	1f 93       	push	r17
 922:	0f 93       	push	r16
 924:	ff 92       	push	r15
 926:	ef 92       	push	r14
 928:	df 92       	push	r13
 92a:	7b 01       	movw	r14, r22
 92c:	8c 01       	movw	r16, r24
 92e:	68 94       	set
 930:	05 c0       	rjmp	.+10     	; 0x93c <__fp_powser+0x20>
 932:	da 2e       	mov	r13, r26
 934:	ef 01       	movw	r28, r30
 936:	ec de       	rcall	.-552    	; 0x710 <__mulsf3x>
 938:	fe 01       	movw	r30, r28
 93a:	e8 94       	clt
 93c:	a5 91       	lpm	r26, Z+
 93e:	25 91       	lpm	r18, Z+
 940:	35 91       	lpm	r19, Z+
 942:	45 91       	lpm	r20, Z+
 944:	55 91       	lpm	r21, Z+
 946:	ae f3       	brts	.-22     	; 0x932 <__fp_powser+0x16>
 948:	ef 01       	movw	r28, r30
 94a:	3e dd       	rcall	.-1412   	; 0x3c8 <__addsf3x>
 94c:	fe 01       	movw	r30, r28
 94e:	97 01       	movw	r18, r14
 950:	a8 01       	movw	r20, r16
 952:	da 94       	dec	r13
 954:	79 f7       	brne	.-34     	; 0x934 <__fp_powser+0x18>
 956:	df 90       	pop	r13
 958:	ef 90       	pop	r14
 95a:	ff 90       	pop	r15
 95c:	0f 91       	pop	r16
 95e:	1f 91       	pop	r17
 960:	cf 91       	pop	r28
 962:	df 91       	pop	r29
 964:	08 95       	ret

00000966 <inverse>:
 966:	9b 01       	movw	r18, r22
 968:	ac 01       	movw	r20, r24
 96a:	60 e0       	ldi	r22, 0x00	; 0
 96c:	70 e0       	ldi	r23, 0x00	; 0
 96e:	80 e8       	ldi	r24, 0x80	; 128
 970:	9f e3       	ldi	r25, 0x3F	; 63
 972:	7d cd       	rjmp	.-1286   	; 0x46e <__divsf3>
 974:	21 ce       	rjmp	.-958    	; 0x5b8 <__fp_inf>
 976:	c4 cf       	rjmp	.-120    	; 0x900 <__fp_mpack>

00000978 <ldexp>:
 978:	4f de       	rcall	.-866    	; 0x618 <__fp_splitA>
 97a:	e8 f3       	brcs	.-6      	; 0x976 <inverse+0x10>
 97c:	99 23       	and	r25, r25
 97e:	d9 f3       	breq	.-10     	; 0x976 <inverse+0x10>
 980:	94 0f       	add	r25, r20
 982:	51 1d       	adc	r21, r1
 984:	bb f3       	brvs	.-18     	; 0x974 <inverse+0xe>
 986:	91 50       	subi	r25, 0x01	; 1
 988:	50 40       	sbci	r21, 0x00	; 0
 98a:	94 f0       	brlt	.+36     	; 0x9b0 <ldexp+0x38>
 98c:	59 f0       	breq	.+22     	; 0x9a4 <ldexp+0x2c>
 98e:	88 23       	and	r24, r24
 990:	32 f0       	brmi	.+12     	; 0x99e <ldexp+0x26>
 992:	66 0f       	add	r22, r22
 994:	77 1f       	adc	r23, r23
 996:	88 1f       	adc	r24, r24
 998:	91 50       	subi	r25, 0x01	; 1
 99a:	50 40       	sbci	r21, 0x00	; 0
 99c:	c1 f7       	brne	.-16     	; 0x98e <ldexp+0x16>
 99e:	9e 3f       	cpi	r25, 0xFE	; 254
 9a0:	51 05       	cpc	r21, r1
 9a2:	44 f7       	brge	.-48     	; 0x974 <inverse+0xe>
 9a4:	88 0f       	add	r24, r24
 9a6:	91 1d       	adc	r25, r1
 9a8:	96 95       	lsr	r25
 9aa:	87 95       	ror	r24
 9ac:	97 f9       	bld	r25, 7
 9ae:	08 95       	ret
 9b0:	5f 3f       	cpi	r21, 0xFF	; 255
 9b2:	ac f0       	brlt	.+42     	; 0x9de <ldexp+0x66>
 9b4:	98 3e       	cpi	r25, 0xE8	; 232
 9b6:	9c f0       	brlt	.+38     	; 0x9de <ldexp+0x66>
 9b8:	bb 27       	eor	r27, r27
 9ba:	86 95       	lsr	r24
 9bc:	77 95       	ror	r23
 9be:	67 95       	ror	r22
 9c0:	b7 95       	ror	r27
 9c2:	08 f4       	brcc	.+2      	; 0x9c6 <ldexp+0x4e>
 9c4:	b1 60       	ori	r27, 0x01	; 1
 9c6:	93 95       	inc	r25
 9c8:	c1 f7       	brne	.-16     	; 0x9ba <ldexp+0x42>
 9ca:	bb 0f       	add	r27, r27
 9cc:	58 f7       	brcc	.-42     	; 0x9a4 <ldexp+0x2c>
 9ce:	11 f4       	brne	.+4      	; 0x9d4 <ldexp+0x5c>
 9d0:	60 ff       	sbrs	r22, 0
 9d2:	e8 cf       	rjmp	.-48     	; 0x9a4 <ldexp+0x2c>
 9d4:	6f 5f       	subi	r22, 0xFF	; 255
 9d6:	7f 4f       	sbci	r23, 0xFF	; 255
 9d8:	8f 4f       	sbci	r24, 0xFF	; 255
 9da:	9f 4f       	sbci	r25, 0xFF	; 255
 9dc:	e3 cf       	rjmp	.-58     	; 0x9a4 <ldexp+0x2c>
 9de:	37 ce       	rjmp	.-914    	; 0x64e <__fp_szero>

000009e0 <modf>:
 9e0:	fa 01       	movw	r30, r20
 9e2:	dc 01       	movw	r26, r24
 9e4:	aa 0f       	add	r26, r26
 9e6:	bb 1f       	adc	r27, r27
 9e8:	9b 01       	movw	r18, r22
 9ea:	ac 01       	movw	r20, r24
 9ec:	bf 57       	subi	r27, 0x7F	; 127
 9ee:	28 f4       	brcc	.+10     	; 0x9fa <modf+0x1a>
 9f0:	22 27       	eor	r18, r18
 9f2:	33 27       	eor	r19, r19
 9f4:	44 27       	eor	r20, r20
 9f6:	50 78       	andi	r21, 0x80	; 128
 9f8:	1f c0       	rjmp	.+62     	; 0xa38 <modf+0x58>
 9fa:	b7 51       	subi	r27, 0x17	; 23
 9fc:	88 f4       	brcc	.+34     	; 0xa20 <modf+0x40>
 9fe:	ab 2f       	mov	r26, r27
 a00:	00 24       	eor	r0, r0
 a02:	46 95       	lsr	r20
 a04:	37 95       	ror	r19
 a06:	27 95       	ror	r18
 a08:	01 1c       	adc	r0, r1
 a0a:	a3 95       	inc	r26
 a0c:	d2 f3       	brmi	.-12     	; 0xa02 <modf+0x22>
 a0e:	00 20       	and	r0, r0
 a10:	69 f0       	breq	.+26     	; 0xa2c <modf+0x4c>
 a12:	22 0f       	add	r18, r18
 a14:	33 1f       	adc	r19, r19
 a16:	44 1f       	adc	r20, r20
 a18:	b3 95       	inc	r27
 a1a:	da f3       	brmi	.-10     	; 0xa12 <modf+0x32>
 a1c:	0d d0       	rcall	.+26     	; 0xa38 <modf+0x58>
 a1e:	c2 cc       	rjmp	.-1660   	; 0x3a4 <__subsf3>
 a20:	61 30       	cpi	r22, 0x01	; 1
 a22:	71 05       	cpc	r23, r1
 a24:	a0 e8       	ldi	r26, 0x80	; 128
 a26:	8a 07       	cpc	r24, r26
 a28:	b9 46       	sbci	r27, 0x69	; 105
 a2a:	30 f4       	brcc	.+12     	; 0xa38 <modf+0x58>
 a2c:	9b 01       	movw	r18, r22
 a2e:	ac 01       	movw	r20, r24
 a30:	66 27       	eor	r22, r22
 a32:	77 27       	eor	r23, r23
 a34:	88 27       	eor	r24, r24
 a36:	90 78       	andi	r25, 0x80	; 128
 a38:	30 96       	adiw	r30, 0x00	; 0
 a3a:	21 f0       	breq	.+8      	; 0xa44 <modf+0x64>
 a3c:	20 83       	st	Z, r18
 a3e:	31 83       	std	Z+1, r19	; 0x01
 a40:	42 83       	std	Z+2, r20	; 0x02
 a42:	53 83       	std	Z+3, r21	; 0x03
 a44:	08 95       	ret

00000a46 <__udivmodsi4>:
 a46:	a1 e2       	ldi	r26, 0x21	; 33
 a48:	1a 2e       	mov	r1, r26
 a4a:	aa 1b       	sub	r26, r26
 a4c:	bb 1b       	sub	r27, r27
 a4e:	fd 01       	movw	r30, r26
 a50:	0d c0       	rjmp	.+26     	; 0xa6c <__udivmodsi4_ep>

00000a52 <__udivmodsi4_loop>:
 a52:	aa 1f       	adc	r26, r26
 a54:	bb 1f       	adc	r27, r27
 a56:	ee 1f       	adc	r30, r30
 a58:	ff 1f       	adc	r31, r31
 a5a:	a2 17       	cp	r26, r18
 a5c:	b3 07       	cpc	r27, r19
 a5e:	e4 07       	cpc	r30, r20
 a60:	f5 07       	cpc	r31, r21
 a62:	20 f0       	brcs	.+8      	; 0xa6c <__udivmodsi4_ep>
 a64:	a2 1b       	sub	r26, r18
 a66:	b3 0b       	sbc	r27, r19
 a68:	e4 0b       	sbc	r30, r20
 a6a:	f5 0b       	sbc	r31, r21

00000a6c <__udivmodsi4_ep>:
 a6c:	66 1f       	adc	r22, r22
 a6e:	77 1f       	adc	r23, r23
 a70:	88 1f       	adc	r24, r24
 a72:	99 1f       	adc	r25, r25
 a74:	1a 94       	dec	r1
 a76:	69 f7       	brne	.-38     	; 0xa52 <__udivmodsi4_loop>
 a78:	60 95       	com	r22
 a7a:	70 95       	com	r23
 a7c:	80 95       	com	r24
 a7e:	90 95       	com	r25
 a80:	9b 01       	movw	r18, r22
 a82:	ac 01       	movw	r20, r24
 a84:	bd 01       	movw	r22, r26
 a86:	cf 01       	movw	r24, r30
 a88:	08 95       	ret

00000a8a <_exit>:
 a8a:	f8 94       	cli

00000a8c <__stop_program>:
 a8c:	ff cf       	rjmp	.-2      	; 0xa8c <__stop_program>
